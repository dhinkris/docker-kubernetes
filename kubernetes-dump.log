{
    "kind": "NodeList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/nodes",
        "resourceVersion": "17327"
    },
    "items": [
        {
            "metadata": {
                "name": "docker-desktop",
                "selfLink": "/api/v1/nodes/docker-desktop",
                "uid": "36f9cf23-e459-11e9-ba40-025000000001",
                "resourceVersion": "17293",
                "creationTimestamp": "2019-10-01T14:39:03Z",
                "labels": {
                    "beta.kubernetes.io/arch": "amd64",
                    "beta.kubernetes.io/os": "linux",
                    "kubernetes.io/arch": "amd64",
                    "kubernetes.io/hostname": "docker-desktop",
                    "kubernetes.io/os": "linux",
                    "node-role.kubernetes.io/master": ""
                },
                "annotations": {
                    "kubeadm.alpha.kubernetes.io/cri-socket": "/var/run/dockershim.sock",
                    "node.alpha.kubernetes.io/ttl": "0",
                    "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                }
            },
            "spec": {},
            "status": {
                "capacity": {
                    "cpu": "4",
                    "ephemeral-storage": "30626664Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "2046844Ki",
                    "pods": "110"
                },
                "allocatable": {
                    "cpu": "4",
                    "ephemeral-storage": "28225533496",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "1944444Ki",
                    "pods": "110"
                },
                "conditions": [
                    {
                        "type": "MemoryPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2019-10-01T18:29:39Z",
                        "lastTransitionTime": "2019-10-01T14:38:59Z",
                        "reason": "KubeletHasSufficientMemory",
                        "message": "kubelet has sufficient memory available"
                    },
                    {
                        "type": "DiskPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2019-10-01T18:29:39Z",
                        "lastTransitionTime": "2019-10-01T14:38:59Z",
                        "reason": "KubeletHasNoDiskPressure",
                        "message": "kubelet has no disk pressure"
                    },
                    {
                        "type": "PIDPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2019-10-01T18:29:39Z",
                        "lastTransitionTime": "2019-10-01T14:38:59Z",
                        "reason": "KubeletHasSufficientPID",
                        "message": "kubelet has sufficient PID available"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastHeartbeatTime": "2019-10-01T18:29:39Z",
                        "lastTransitionTime": "2019-10-01T14:38:59Z",
                        "reason": "KubeletReady",
                        "message": "kubelet is posting ready status"
                    }
                ],
                "addresses": [
                    {
                        "type": "InternalIP",
                        "address": "192.168.65.3"
                    },
                    {
                        "type": "Hostname",
                        "address": "docker-desktop"
                    }
                ],
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 10250
                    }
                },
                "nodeInfo": {
                    "machineID": "7129c496-5ffe-436e-89f5-609ecb37e30e",
                    "systemUUID": "F812423E-0000-0000-8E5F-DEE8C2459AE5",
                    "bootID": "ed49b7d1-991f-4367-8001-4a4d8645480a",
                    "kernelVersion": "4.9.184-linuxkit",
                    "osImage": "Docker Desktop",
                    "containerRuntimeVersion": "docker://19.3.2",
                    "kubeletVersion": "v1.14.6",
                    "kubeProxyVersion": "v1.14.6",
                    "operatingSystem": "linux",
                    "architecture": "amd64"
                },
                "images": [
                    {
                        "names": [
                            "dhinkris/react-app@sha256:d6f6ab0f84b9031f4598efaf6db4c67a6b0d4c9919a81210b1fc767331bc323d",
                            "dhinkris/react-app:v1",
                            "react-app:v1"
                        ],
                        "sizeBytes": 1205490956
                    },
                    {
                        "names": [
                            "node@sha256:cda22332e2dd46807a14d3268ee3fb298651386ad1f03cfd58772a7dc65f89c7",
                            "node:latest"
                        ],
                        "sizeBytes": 907483292
                    },
                    {
                        "names": [
                            "k8s.gcr.io/etcd@sha256:17da501f5d2a675be46040422a27b7cc21b8a43895ac998b171db1c346f361f7",
                            "k8s.gcr.io/etcd:3.3.10"
                        ],
                        "sizeBytes": 258116302
                    },
                    {
                        "names": [
                            "docker@sha256:32a64c705d16908da171e411df7a5261ce7616daa7a8cd72c52639345bb9b470",
                            "docker:latest"
                        ],
                        "sizeBytes": 215674107
                    },
                    {
                        "names": [
                            "k8s.gcr.io/kube-apiserver@sha256:8c43d27db9fc89f515ea35e6f7cd8cfe0429e9fc1a0cb7eda9ca9dced36675b0",
                            "k8s.gcr.io/kube-apiserver:v1.14.6"
                        ],
                        "sizeBytes": 209433406
                    },
                    {
                        "names": [
                            "k8s.gcr.io/kube-controller-manager@sha256:1809ab49da73332ca9f8e46cb0a7b799375a49ed50996c579352fc6e880add95",
                            "k8s.gcr.io/kube-controller-manager:v1.14.6"
                        ],
                        "sizeBytes": 157458462
                    },
                    {
                        "names": [
                            "k8s.gcr.io/kubernetes-dashboard-amd64@sha256:0ae6b69432e78069c5ce2bcde0fe409c5c4d6f0f4d9cd50a17974fea38898747",
                            "k8s.gcr.io/kubernetes-dashboard-amd64:v1.10.1"
                        ],
                        "sizeBytes": 121711221
                    },
                    {
                        "names": [
                            "kubernetesui/dashboard@sha256:a35498beec44376efcf8c4478eebceb57ec3ba39a6579222358a1ebe455ec49e",
                            "kubernetesui/dashboard:v2.0.0-beta4"
                        ],
                        "sizeBytes": 84034786
                    },
                    {
                        "names": [
                            "k8s.gcr.io/kube-proxy@sha256:e5c364dc75d816132bebf2d84b35518f0661fdeae39c686d92f9e5f9a07e96b9",
                            "k8s.gcr.io/kube-proxy:v1.14.6"
                        ],
                        "sizeBytes": 82106236
                    },
                    {
                        "names": [
                            "k8s.gcr.io/kube-scheduler@sha256:0147e498f115390c6276014c5ac038e1128ba1cc0d15d28c380ba5a8cab34851",
                            "k8s.gcr.io/kube-scheduler:v1.14.6"
                        ],
                        "sizeBytes": 81579742
                    },
                    {
                        "names": [
                            "docker/kube-compose-api-server@sha256:035e674c761c8a9bffe25a4f7c552e617869d1c1bfb2f84074c3ee63f3018da4",
                            "docker/kube-compose-api-server:v0.4.23"
                        ],
                        "sizeBytes": 49939182
                    },
                    {
                        "names": [
                            "k8s.gcr.io/coredns@sha256:02382353821b12c21b062c59184e227e001079bb13ebd01f9d3270ba0fcbf1e4",
                            "k8s.gcr.io/coredns:1.3.1"
                        ],
                        "sizeBytes": 40303560
                    },
                    {
                        "names": [
                            "kubernetesui/metrics-scraper@sha256:35fcae4fd9232a541a8cb08f2853117ba7231750b75c2cb3b6a58a2aaa57f878",
                            "kubernetesui/metrics-scraper:v1.0.1"
                        ],
                        "sizeBytes": 40101504
                    },
                    {
                        "names": [
                            "docker/kube-compose-controller@sha256:e15dad3aa71c0051e64831b145680f76f261f433bc6fc49987c45e43e039960b",
                            "docker/kube-compose-controller:v0.4.23"
                        ],
                        "sizeBytes": 35271598
                    },
                    {
                        "names": [
                            "k8s.gcr.io/pause@sha256:f78411e19d84a252e53bff71a4407a5686c46983a2c2eeed83929b888179acea",
                            "k8s.gcr.io/pause:3.1"
                        ],
                        "sizeBytes": 742472
                    }
                ]
            }
        }
    ]
}
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/kube-system/events",
        "resourceVersion": "17327"
    },
    "items": []
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/kube-system/replicationcontrollers",
        "resourceVersion": "17327"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/kube-system/services",
        "resourceVersion": "17327"
    },
    "items": [
        {
            "metadata": {
                "name": "kube-dns",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/services/kube-dns",
                "uid": "39d27109-e459-11e9-ba40-025000000001",
                "resourceVersion": "190",
                "creationTimestamp": "2019-10-01T14:39:08Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "kubernetes.io/cluster-service": "true",
                    "kubernetes.io/name": "KubeDNS"
                },
                "annotations": {
                    "prometheus.io/port": "9153",
                    "prometheus.io/scrape": "true"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "dns",
                        "protocol": "UDP",
                        "port": 53,
                        "targetPort": 53
                    },
                    {
                        "name": "dns-tcp",
                        "protocol": "TCP",
                        "port": 53,
                        "targetPort": 53
                    },
                    {
                        "name": "metrics",
                        "protocol": "TCP",
                        "port": 9153,
                        "targetPort": 9153
                    }
                ],
                "selector": {
                    "k8s-app": "kube-dns"
                },
                "clusterIP": "10.96.0.10",
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "metadata": {
                "name": "kubernetes-dashboard",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/services/kubernetes-dashboard",
                "uid": "d6608d1d-e459-11e9-ba40-025000000001",
                "resourceVersion": "780",
                "creationTimestamp": "2019-10-01T14:43:31Z",
                "labels": {
                    "k8s-app": "kubernetes-dashboard"
                }
            },
            "spec": {
                "ports": [
                    {
                        "protocol": "TCP",
                        "port": 443,
                        "targetPort": 8443
                    }
                ],
                "selector": {
                    "k8s-app": "kubernetes-dashboard"
                },
                "clusterIP": "10.104.147.5",
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "selfLink": "/apis/apps/v1/namespaces/kube-system/daemonsets",
        "resourceVersion": "17327"
    },
    "items": [
        {
            "metadata": {
                "name": "kube-proxy",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/daemonsets/kube-proxy",
                "uid": "3a01efbf-e459-11e9-ba40-025000000001",
                "resourceVersion": "359",
                "generation": 1,
                "creationTimestamp": "2019-10-01T14:39:08Z",
                "labels": {
                    "k8s-app": "kube-proxy"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-proxy"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-proxy"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "kube-proxy",
                                "configMap": {
                                    "name": "kube-proxy",
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "xtables-lock",
                                "hostPath": {
                                    "path": "/run/xtables.lock",
                                    "type": "FileOrCreate"
                                }
                            },
                            {
                                "name": "lib-modules",
                                "hostPath": {
                                    "path": "/lib/modules",
                                    "type": ""
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "kube-proxy",
                                "image": "k8s.gcr.io/kube-proxy:v1.14.6",
                                "command": [
                                    "/usr/local/bin/kube-proxy",
                                    "--config=/var/lib/kube-proxy/config.conf",
                                    "--hostname-override=$(NODE_NAME)"
                                ],
                                "env": [
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "kube-proxy",
                                        "mountPath": "/var/lib/kube-proxy"
                                    },
                                    {
                                        "name": "xtables-lock",
                                        "mountPath": "/run/xtables.lock"
                                    },
                                    {
                                        "name": "lib-modules",
                                        "readOnly": true,
                                        "mountPath": "/lib/modules"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "privileged": true
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "kube-proxy",
                        "serviceAccount": "kube-proxy",
                        "hostNetwork": true,
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 1,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 1,
                "numberReady": 1,
                "observedGeneration": 1,
                "updatedNumberScheduled": 1,
                "numberAvailable": 1
            }
        }
    ]
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "selfLink": "/apis/apps/v1/namespaces/kube-system/deployments",
        "resourceVersion": "17327"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/deployments/coredns",
                "uid": "39d01b35-e459-11e9-ba40-025000000001",
                "resourceVersion": "8706",
                "generation": 1,
                "creationTimestamp": "2019-10-01T14:39:08Z",
                "labels": {
                    "k8s-app": "kube-dns"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1"
                }
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "k8s.gcr.io/coredns:1.3.1",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "nodeSelector": {
                            "beta.kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node-role.kubernetes.io/master",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 2,
                "updatedReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "conditions": [
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2019-10-01T14:39:27Z",
                        "lastTransitionTime": "2019-10-01T14:39:15Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"coredns-584795fc57\" has successfully progressed."
                    },
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2019-10-01T16:32:46Z",
                        "lastTransitionTime": "2019-10-01T16:32:46Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "kubernetes-dashboard",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/deployments/kubernetes-dashboard",
                "uid": "d65cffe9-e459-11e9-ba40-025000000001",
                "resourceVersion": "8672",
                "generation": 1,
                "creationTimestamp": "2019-10-01T14:43:31Z",
                "labels": {
                    "k8s-app": "kubernetes-dashboard"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kubernetes-dashboard"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kubernetes-dashboard"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "kubernetes-dashboard-certs",
                                "secret": {
                                    "secretName": "kubernetes-dashboard-certs",
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "tmp-volume",
                                "emptyDir": {}
                            }
                        ],
                        "containers": [
                            {
                                "name": "kubernetes-dashboard",
                                "image": "k8s.gcr.io/kubernetes-dashboard-amd64:v1.10.1",
                                "args": [
                                    "--auto-generate-certificates"
                                ],
                                "ports": [
                                    {
                                        "containerPort": 8443,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "kubernetes-dashboard-certs",
                                        "mountPath": "/certs"
                                    },
                                    {
                                        "name": "tmp-volume",
                                        "mountPath": "/tmp"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/",
                                        "port": 8443,
                                        "scheme": "HTTPS"
                                    },
                                    "initialDelaySeconds": 30,
                                    "timeoutSeconds": 30,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "kubernetes-dashboard",
                        "serviceAccount": "kubernetes-dashboard",
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "node-role.kubernetes.io/master",
                                "effect": "NoSchedule"
                            }
                        ]
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "conditions": [
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2019-10-01T14:44:59Z",
                        "lastTransitionTime": "2019-10-01T14:43:31Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"kubernetes-dashboard-5f7b999d65\" has successfully progressed."
                    },
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2019-10-01T16:32:37Z",
                        "lastTransitionTime": "2019-10-01T16:32:37Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    }
                ]
            }
        }
    ]
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "selfLink": "/apis/apps/v1/namespaces/kube-system/replicasets",
        "resourceVersion": "17327"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-584795fc57",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/replicasets/coredns-584795fc57",
                "uid": "3dca7569-e459-11e9-ba40-025000000001",
                "resourceVersion": "8705",
                "generation": 1,
                "creationTimestamp": "2019-10-01T14:39:15Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "584795fc57"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "2",
                    "deployment.kubernetes.io/max-replicas": "3",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "coredns",
                        "uid": "39d01b35-e459-11e9-ba40-025000000001",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns",
                        "pod-template-hash": "584795fc57"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns",
                            "pod-template-hash": "584795fc57"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "k8s.gcr.io/coredns:1.3.1",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "nodeSelector": {
                            "beta.kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node-role.kubernetes.io/master",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                }
            },
            "status": {
                "replicas": 2,
                "fullyLabeledReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "kubernetes-dashboard-5f7b999d65",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/replicasets/kubernetes-dashboard-5f7b999d65",
                "uid": "d65dc05e-e459-11e9-ba40-025000000001",
                "resourceVersion": "8671",
                "generation": 1,
                "creationTimestamp": "2019-10-01T14:43:31Z",
                "labels": {
                    "k8s-app": "kubernetes-dashboard",
                    "pod-template-hash": "5f7b999d65"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "kubernetes-dashboard",
                        "uid": "d65cffe9-e459-11e9-ba40-025000000001",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kubernetes-dashboard",
                        "pod-template-hash": "5f7b999d65"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kubernetes-dashboard",
                            "pod-template-hash": "5f7b999d65"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "kubernetes-dashboard-certs",
                                "secret": {
                                    "secretName": "kubernetes-dashboard-certs",
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "tmp-volume",
                                "emptyDir": {}
                            }
                        ],
                        "containers": [
                            {
                                "name": "kubernetes-dashboard",
                                "image": "k8s.gcr.io/kubernetes-dashboard-amd64:v1.10.1",
                                "args": [
                                    "--auto-generate-certificates"
                                ],
                                "ports": [
                                    {
                                        "containerPort": 8443,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "kubernetes-dashboard-certs",
                                        "mountPath": "/certs"
                                    },
                                    {
                                        "name": "tmp-volume",
                                        "mountPath": "/tmp"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/",
                                        "port": 8443,
                                        "scheme": "HTTPS"
                                    },
                                    "initialDelaySeconds": 30,
                                    "timeoutSeconds": 30,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "kubernetes-dashboard",
                        "serviceAccount": "kubernetes-dashboard",
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "node-role.kubernetes.io/master",
                                "effect": "NoSchedule"
                            }
                        ]
                    }
                }
            },
            "status": {
                "replicas": 1,
                "fullyLabeledReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "observedGeneration": 1
            }
        }
    ]
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/kube-system/pods",
        "resourceVersion": "17327"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-584795fc57-7pvbq",
                "generateName": "coredns-584795fc57-",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/pods/coredns-584795fc57-7pvbq",
                "uid": "3dcce268-e459-11e9-ba40-025000000001",
                "resourceVersion": "8693",
                "creationTimestamp": "2019-10-01T14:39:15Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "584795fc57"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "coredns-584795fc57",
                        "uid": "3dca7569-e459-11e9-ba40-025000000001",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "config-volume",
                        "configMap": {
                            "name": "coredns",
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "coredns-token-97rnf",
                        "secret": {
                            "secretName": "coredns-token-97rnf",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "coredns",
                        "image": "k8s.gcr.io/coredns:1.3.1",
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "ports": [
                            {
                                "name": "dns",
                                "containerPort": 53,
                                "protocol": "UDP"
                            },
                            {
                                "name": "dns-tcp",
                                "containerPort": 53,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "containerPort": 9153,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "170Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "config-volume",
                                "readOnly": true,
                                "mountPath": "/etc/coredns"
                            },
                            {
                                "name": "coredns-token-97rnf",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "all"
                                ]
                            },
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "nodeSelector": {
                    "beta.kubernetes.io/os": "linux"
                },
                "serviceAccountName": "coredns",
                "serviceAccount": "coredns",
                "nodeName": "docker-desktop",
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node-role.kubernetes.io/master",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "system-cluster-critical",
                "priority": 2000000000,
                "enableServiceLinks": true
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-10-01T14:39:17Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-10-01T16:32:46Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-10-01T16:32:46Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-10-01T14:39:17Z"
                    }
                ],
                "hostIP": "192.168.65.3",
                "podIP": "10.1.0.10",
                "startTime": "2019-10-01T14:39:17Z",
                "containerStatuses": [
                    {
                        "name": "coredns",
                        "state": {
                            "running": {
                                "startedAt": "2019-10-01T16:32:38Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 2,
                                "reason": "Error",
                                "startedAt": "2019-10-01T16:31:50Z",
                                "finishedAt": "2019-10-01T16:32:21Z",
                                "containerID": "docker://bc96eb8ff1ba9995d556da69c51718a4506605c011adfb653dadb2a72f7f38f1"
                            }
                        },
                        "ready": true,
                        "restartCount": 4,
                        "image": "k8s.gcr.io/coredns:1.3.1",
                        "imageID": "docker-pullable://k8s.gcr.io/coredns@sha256:02382353821b12c21b062c59184e227e001079bb13ebd01f9d3270ba0fcbf1e4",
                        "containerID": "docker://e0edf96507d6cd91c30cdf55dc030222cfa0b2493ec951d7131e504a9a1c9ea5"
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "coredns-584795fc57-p6t6q",
                "generateName": "coredns-584795fc57-",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/pods/coredns-584795fc57-p6t6q",
                "uid": "3dcb8e57-e459-11e9-ba40-025000000001",
                "resourceVersion": "8704",
                "creationTimestamp": "2019-10-01T14:39:15Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "584795fc57"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "coredns-584795fc57",
                        "uid": "3dca7569-e459-11e9-ba40-025000000001",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "config-volume",
                        "configMap": {
                            "name": "coredns",
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "coredns-token-97rnf",
                        "secret": {
                            "secretName": "coredns-token-97rnf",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "coredns",
                        "image": "k8s.gcr.io/coredns:1.3.1",
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "ports": [
                            {
                                "name": "dns",
                                "containerPort": 53,
                                "protocol": "UDP"
                            },
                            {
                                "name": "dns-tcp",
                                "containerPort": 53,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "containerPort": 9153,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "170Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "config-volume",
                                "readOnly": true,
                                "mountPath": "/etc/coredns"
                            },
                            {
                                "name": "coredns-token-97rnf",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "all"
                                ]
                            },
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "nodeSelector": {
                    "beta.kubernetes.io/os": "linux"
                },
                "serviceAccountName": "coredns",
                "serviceAccount": "coredns",
                "nodeName": "docker-desktop",
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node-role.kubernetes.io/master",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "system-cluster-critical",
                "priority": 2000000000,
                "enableServiceLinks": true
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-10-01T14:39:17Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-10-01T16:32:51Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-10-01T16:32:51Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-10-01T14:39:17Z"
                    }
                ],
                "hostIP": "192.168.65.3",
                "podIP": "10.1.0.11",
                "startTime": "2019-10-01T14:39:17Z",
                "containerStatuses": [
                    {
                        "name": "coredns",
                        "state": {
                            "running": {
                                "startedAt": "2019-10-01T16:32:44Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 2,
                                "reason": "Error",
                                "startedAt": "2019-10-01T16:31:50Z",
                                "finishedAt": "2019-10-01T16:32:21Z",
                                "containerID": "docker://1a858f56d472be536a6ee56f078bb4c499a8115dac9f94f4a7007cdd35d26750"
                            }
                        },
                        "ready": true,
                        "restartCount": 4,
                        "image": "k8s.gcr.io/coredns:1.3.1",
                        "imageID": "docker-pullable://k8s.gcr.io/coredns@sha256:02382353821b12c21b062c59184e227e001079bb13ebd01f9d3270ba0fcbf1e4",
                        "containerID": "docker://b1ca5d7729307fb6a03e7801e4ab9e65841c16c97238616c93c93d4fd09f2a44"
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "etcd-docker-desktop",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/pods/etcd-docker-desktop",
                "uid": "699c5e62-e459-11e9-ba40-025000000001",
                "resourceVersion": "8517",
                "creationTimestamp": "2019-10-01T14:40:28Z",
                "labels": {
                    "component": "etcd",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubernetes.io/config.hash": "3773efb8e009876ddfa2c10173dba95e",
                    "kubernetes.io/config.mirror": "3773efb8e009876ddfa2c10173dba95e",
                    "kubernetes.io/config.seen": "2019-10-01T14:38:37.318634471Z",
                    "kubernetes.io/config.source": "file"
                }
            },
            "spec": {
                "volumes": [
                    {
                        "name": "etcd-certs",
                        "hostPath": {
                            "path": "/run/config/pki/etcd",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "etcd-data",
                        "hostPath": {
                            "path": "/var/lib/etcd",
                            "type": "DirectoryOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "etcd",
                        "image": "k8s.gcr.io/etcd:3.3.10",
                        "command": [
                            "etcd",
                            "--advertise-client-urls=https://192.168.65.3:2379",
                            "--cert-file=/run/config/pki/etcd/server.crt",
                            "--client-cert-auth=true",
                            "--data-dir=/var/lib/etcd",
                            "--initial-advertise-peer-urls=https://192.168.65.3:2380",
                            "--initial-cluster=docker-desktop=https://192.168.65.3:2380",
                            "--key-file=/run/config/pki/etcd/server.key",
                            "--listen-client-urls=https://127.0.0.1:2379,https://192.168.65.3:2379",
                            "--listen-peer-urls=https://192.168.65.3:2380",
                            "--name=docker-desktop",
                            "--peer-cert-file=/run/config/pki/etcd/peer.crt",
                            "--peer-client-cert-auth=true",
                            "--peer-key-file=/run/config/pki/etcd/peer.key",
                            "--peer-trusted-ca-file=/run/config/pki/etcd/ca.crt",
                            "--snapshot-count=10000",
                            "--trusted-ca-file=/run/config/pki/etcd/ca.crt"
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "etcd-data",
                                "mountPath": "/var/lib/etcd"
                            },
                            {
                                "name": "etcd-certs",
                                "mountPath": "/run/config/pki/etcd"
                            }
                        ],
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "/bin/sh",
                                    "-ec",
                                    "ETCDCTL_API=3 etcdctl --endpoints=https://[127.0.0.1]:2379 --cacert=/run/config/pki/etcd/ca.crt --cert=/run/config/pki/etcd/healthcheck-client.crt --key=/run/config/pki/etcd/healthcheck-client.key get foo"
                                ]
                            },
                            "initialDelaySeconds": 15,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "docker-desktop",
                "hostNetwork": true,
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-cluster-critical",
                "priority": 2000000000,
                "enableServiceLinks": true
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-10-01T14:56:14Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-10-01T14:56:17Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-10-01T14:56:17Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-10-01T14:56:14Z"
                    }
                ],
                "hostIP": "192.168.65.3",
                "podIP": "192.168.65.3",
                "startTime": "2019-10-01T14:56:14Z",
                "containerStatuses": [
                    {
                        "name": "etcd",
                        "state": {
                            "running": {
                                "startedAt": "2019-10-01T16:31:38Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Error",
                                "startedAt": "2019-10-01T14:56:16Z",
                                "finishedAt": "2019-10-01T16:31:05Z",
                                "containerID": "docker://9b6ec30cbcb3db7bd1bf1a687b0a8009f909a6498ae01d0d9e7a8bc8044dc107"
                            }
                        },
                        "ready": true,
                        "restartCount": 2,
                        "image": "k8s.gcr.io/etcd:3.3.10",
                        "imageID": "docker-pullable://k8s.gcr.io/etcd@sha256:17da501f5d2a675be46040422a27b7cc21b8a43895ac998b171db1c346f361f7",
                        "containerID": "docker://e772d8c7620684c3ff6e32a3e8f93c25a23212663f144fd0b25edcb622e4f32e"
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "kube-apiserver-docker-desktop",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/pods/kube-apiserver-docker-desktop",
                "uid": "6a34c384-e459-11e9-ba40-025000000001",
                "resourceVersion": "8495",
                "creationTimestamp": "2019-10-01T14:40:29Z",
                "labels": {
                    "component": "kube-apiserver",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubernetes.io/config.hash": "0dba01cced9882fb86c5694d381dc9a5",
                    "kubernetes.io/config.mirror": "0dba01cced9882fb86c5694d381dc9a5",
                    "kubernetes.io/config.seen": "2019-10-01T14:38:37.318642129Z",
                    "kubernetes.io/config.source": "file"
                }
            },
            "spec": {
                "volumes": [
                    {
                        "name": "ca-certs",
                        "hostPath": {
                            "path": "/etc/ssl/certs",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "etc-ca-certificates",
                        "hostPath": {
                            "path": "/etc/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "k8s-certs",
                        "hostPath": {
                            "path": "/run/config/pki",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "usr-local-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/local/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "usr-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-apiserver",
                        "image": "k8s.gcr.io/kube-apiserver:v1.14.6",
                        "command": [
                            "kube-apiserver",
                            "--advertise-address=192.168.65.3",
                            "--allow-privileged=true",
                            "--authorization-mode=Node,RBAC",
                            "--client-ca-file=/run/config/pki/ca.crt",
                            "--enable-admission-plugins=NodeRestriction",
                            "--enable-bootstrap-token-auth=true",
                            "--etcd-cafile=/run/config/pki/etcd/ca.crt",
                            "--etcd-certfile=/run/config/pki/apiserver-etcd-client.crt",
                            "--etcd-keyfile=/run/config/pki/apiserver-etcd-client.key",
                            "--etcd-servers=https://127.0.0.1:2379",
                            "--insecure-port=0",
                            "--kubelet-client-certificate=/run/config/pki/apiserver-kubelet-client.crt",
                            "--kubelet-client-key=/run/config/pki/apiserver-kubelet-client.key",
                            "--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname",
                            "--proxy-client-cert-file=/run/config/pki/front-proxy-client.crt",
                            "--proxy-client-key-file=/run/config/pki/front-proxy-client.key",
                            "--requestheader-allowed-names=front-proxy-client",
                            "--requestheader-client-ca-file=/run/config/pki/front-proxy-ca.crt",
                            "--requestheader-extra-headers-prefix=X-Remote-Extra-",
                            "--requestheader-group-headers=X-Remote-Group",
                            "--requestheader-username-headers=X-Remote-User",
                            "--secure-port=6443",
                            "--service-account-key-file=/run/config/pki/sa.pub",
                            "--service-cluster-ip-range=10.96.0.0/12",
                            "--tls-cert-file=/run/config/pki/apiserver.crt",
                            "--tls-private-key-file=/run/config/pki/apiserver.key"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "250m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "ca-certs",
                                "readOnly": true,
                                "mountPath": "/etc/ssl/certs"
                            },
                            {
                                "name": "etc-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/etc/ca-certificates"
                            },
                            {
                                "name": "k8s-certs",
                                "readOnly": true,
                                "mountPath": "/run/config/pki"
                            },
                            {
                                "name": "usr-local-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/local/share/ca-certificates"
                            },
                            {
                                "name": "usr-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/share/ca-certificates"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 6443,
                                "host": "192.168.65.3",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 15,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "docker-desktop",
                "hostNetwork": true,
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-cluster-critical",
                "priority": 2000000000,
                "enableServiceLinks": true
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-10-01T16:31:36Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-10-01T16:31:38Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-10-01T16:31:38Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-10-01T16:31:36Z"
                    }
                ],
                "hostIP": "192.168.65.3",
                "podIP": "192.168.65.3",
                "startTime": "2019-10-01T16:31:36Z",
                "containerStatuses": [
                    {
                        "name": "kube-apiserver",
                        "state": {
                            "running": {
                                "startedAt": "2019-10-01T16:31:37Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Error",
                                "startedAt": "2019-10-01T14:56:16Z",
                                "finishedAt": "2019-10-01T16:31:05Z",
                                "containerID": "docker://d6f6f5b0360f33b7d208fa5dcd5fb5e6e60df89c25ebf90a0d1625bb7294021e"
                            }
                        },
                        "ready": true,
                        "restartCount": 2,
                        "image": "k8s.gcr.io/kube-apiserver:v1.14.6",
                        "imageID": "docker-pullable://k8s.gcr.io/kube-apiserver@sha256:8c43d27db9fc89f515ea35e6f7cd8cfe0429e9fc1a0cb7eda9ca9dced36675b0",
                        "containerID": "docker://5cf26fcc06d9e78236174fef2d9be0ef6d159349c5054f7c2ae8188642da7890"
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-controller-manager-docker-desktop",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/pods/kube-controller-manager-docker-desktop",
                "uid": "6143f142-e459-11e9-ba40-025000000001",
                "resourceVersion": "8511",
                "creationTimestamp": "2019-10-01T14:40:14Z",
                "labels": {
                    "component": "kube-controller-manager",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubernetes.io/config.hash": "4f69bc13e6a168e54390c8aa9060ca11",
                    "kubernetes.io/config.mirror": "4f69bc13e6a168e54390c8aa9060ca11",
                    "kubernetes.io/config.seen": "2019-10-01T14:38:37.318644879Z",
                    "kubernetes.io/config.source": "file"
                }
            },
            "spec": {
                "volumes": [
                    {
                        "name": "ca-certs",
                        "hostPath": {
                            "path": "/etc/ssl/certs",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "etc-ca-certificates",
                        "hostPath": {
                            "path": "/etc/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "k8s-certs",
                        "hostPath": {
                            "path": "/run/config/pki",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "kubeconfig",
                        "hostPath": {
                            "path": "/etc/kubernetes/controller-manager.conf",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "usr-local-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/local/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "usr-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-controller-manager",
                        "image": "k8s.gcr.io/kube-controller-manager:v1.14.6",
                        "command": [
                            "kube-controller-manager",
                            "--authentication-kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--authorization-kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--bind-address=127.0.0.1",
                            "--client-ca-file=/run/config/pki/ca.crt",
                            "--cluster-signing-cert-file=/run/config/pki/ca.crt",
                            "--cluster-signing-key-file=/run/config/pki/ca.key",
                            "--controllers=*,bootstrapsigner,tokencleaner",
                            "--kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--leader-elect=true",
                            "--requestheader-client-ca-file=/run/config/pki/front-proxy-ca.crt",
                            "--root-ca-file=/run/config/pki/ca.crt",
                            "--service-account-private-key-file=/run/config/pki/sa.key",
                            "--use-service-account-credentials=true"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "200m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "ca-certs",
                                "readOnly": true,
                                "mountPath": "/etc/ssl/certs"
                            },
                            {
                                "name": "etc-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/etc/ca-certificates"
                            },
                            {
                                "name": "k8s-certs",
                                "readOnly": true,
                                "mountPath": "/run/config/pki"
                            },
                            {
                                "name": "kubeconfig",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/controller-manager.conf"
                            },
                            {
                                "name": "usr-local-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/local/share/ca-certificates"
                            },
                            {
                                "name": "usr-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/share/ca-certificates"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10252,
                                "host": "127.0.0.1",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 15,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "docker-desktop",
                "hostNetwork": true,
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-cluster-critical",
                "priority": 2000000000,
                "enableServiceLinks": true
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-10-01T16:31:37Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-10-01T16:31:39Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-10-01T16:31:39Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-10-01T16:31:37Z"
                    }
                ],
                "hostIP": "192.168.65.3",
                "podIP": "192.168.65.3",
                "startTime": "2019-10-01T16:31:37Z",
                "containerStatuses": [
                    {
                        "name": "kube-controller-manager",
                        "state": {
                            "running": {
                                "startedAt": "2019-10-01T16:31:38Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Error",
                                "startedAt": "2019-10-01T14:56:16Z",
                                "finishedAt": "2019-10-01T16:31:05Z",
                                "containerID": "docker://b2827931c616a5d604eb64fb48865e3878ec3a4d4305667fbc56605d073dc205"
                            }
                        },
                        "ready": true,
                        "restartCount": 2,
                        "image": "k8s.gcr.io/kube-controller-manager:v1.14.6",
                        "imageID": "docker-pullable://k8s.gcr.io/kube-controller-manager@sha256:1809ab49da73332ca9f8e46cb0a7b799375a49ed50996c579352fc6e880add95",
                        "containerID": "docker://7e47e5b693699dee82d1591f795631a2aa4b20d0943931f78857aff9ea5d711f"
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-proxy-4b47w",
                "generateName": "kube-proxy-",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/pods/kube-proxy-4b47w",
                "uid": "3dc6d8e4-e459-11e9-ba40-025000000001",
                "resourceVersion": "8561",
                "creationTimestamp": "2019-10-01T14:39:15Z",
                "labels": {
                    "controller-revision-hash": "66894c844d",
                    "k8s-app": "kube-proxy",
                    "pod-template-generation": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kube-proxy",
                        "uid": "3a01efbf-e459-11e9-ba40-025000000001",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-proxy",
                        "configMap": {
                            "name": "kube-proxy",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kube-proxy-token-6prj8",
                        "secret": {
                            "secretName": "kube-proxy-token-6prj8",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-proxy",
                        "image": "k8s.gcr.io/kube-proxy:v1.14.6",
                        "command": [
                            "/usr/local/bin/kube-proxy",
                            "--config=/var/lib/kube-proxy/config.conf",
                            "--hostname-override=$(NODE_NAME)"
                        ],
                        "env": [
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "kube-proxy",
                                "mountPath": "/var/lib/kube-proxy"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-proxy-token-6prj8",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "kube-proxy",
                "serviceAccount": "kube-proxy",
                "nodeName": "docker-desktop",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "docker-desktop"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-10-01T14:39:15Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-10-01T16:31:51Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-10-01T16:31:51Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-10-01T14:39:15Z"
                    }
                ],
                "hostIP": "192.168.65.3",
                "podIP": "192.168.65.3",
                "startTime": "2019-10-01T14:39:15Z",
                "containerStatuses": [
                    {
                        "name": "kube-proxy",
                        "state": {
                            "running": {
                                "startedAt": "2019-10-01T16:31:50Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Error",
                                "startedAt": "2019-10-01T14:56:27Z",
                                "finishedAt": "2019-10-01T16:31:05Z",
                                "containerID": "docker://c8cdddfbc7ad230df050974d271580abf7159137e6968603cdece2e9b30f29a3"
                            }
                        },
                        "ready": true,
                        "restartCount": 2,
                        "image": "k8s.gcr.io/kube-proxy:v1.14.6",
                        "imageID": "docker-pullable://k8s.gcr.io/kube-proxy@sha256:e5c364dc75d816132bebf2d84b35518f0661fdeae39c686d92f9e5f9a07e96b9",
                        "containerID": "docker://dfd56b1b6f240c0e163c14524a6cb112e32ac2b05494c03d028a767a4fdcce96"
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "kube-scheduler-docker-desktop",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/pods/kube-scheduler-docker-desktop",
                "uid": "5985e2ac-e459-11e9-ba40-025000000001",
                "resourceVersion": "8532",
                "creationTimestamp": "2019-10-01T14:40:01Z",
                "labels": {
                    "component": "kube-scheduler",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubernetes.io/config.hash": "e437f0c3c5cacc84317d94ff2059ae3b",
                    "kubernetes.io/config.mirror": "e437f0c3c5cacc84317d94ff2059ae3b",
                    "kubernetes.io/config.seen": "2019-10-01T14:38:37.318646867Z",
                    "kubernetes.io/config.source": "file"
                }
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kubeconfig",
                        "hostPath": {
                            "path": "/etc/kubernetes/scheduler.conf",
                            "type": "FileOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-scheduler",
                        "image": "k8s.gcr.io/kube-scheduler:v1.14.6",
                        "command": [
                            "kube-scheduler",
                            "--bind-address=127.0.0.1",
                            "--kubeconfig=/etc/kubernetes/scheduler.conf",
                            "--leader-elect=true"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "kubeconfig",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/scheduler.conf"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10251,
                                "host": "127.0.0.1",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 15,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "docker-desktop",
                "hostNetwork": true,
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-cluster-critical",
                "priority": 2000000000,
                "enableServiceLinks": true
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-10-01T16:31:36Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-10-01T16:31:38Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-10-01T16:31:38Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-10-01T16:31:36Z"
                    }
                ],
                "hostIP": "192.168.65.3",
                "podIP": "192.168.65.3",
                "startTime": "2019-10-01T16:31:36Z",
                "containerStatuses": [
                    {
                        "name": "kube-scheduler",
                        "state": {
                            "running": {
                                "startedAt": "2019-10-01T16:31:38Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Error",
                                "startedAt": "2019-10-01T14:56:16Z",
                                "finishedAt": "2019-10-01T16:31:05Z",
                                "containerID": "docker://4ba6b08de3c604c268f75dccec3f13e38d4935f83013baf9db2b1090c87d36ca"
                            }
                        },
                        "ready": true,
                        "restartCount": 2,
                        "image": "k8s.gcr.io/kube-scheduler:v1.14.6",
                        "imageID": "docker-pullable://k8s.gcr.io/kube-scheduler@sha256:0147e498f115390c6276014c5ac038e1128ba1cc0d15d28c380ba5a8cab34851",
                        "containerID": "docker://77f8ec2748b287ff65b3becb9c8ec8603bb47ba24eb596fa57c8f9f8a6ff1649"
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kubernetes-dashboard-5f7b999d65-s4tbc",
                "generateName": "kubernetes-dashboard-5f7b999d65-",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/pods/kubernetes-dashboard-5f7b999d65-s4tbc",
                "uid": "d65f161e-e459-11e9-ba40-025000000001",
                "resourceVersion": "8669",
                "creationTimestamp": "2019-10-01T14:43:31Z",
                "labels": {
                    "k8s-app": "kubernetes-dashboard",
                    "pod-template-hash": "5f7b999d65"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "kubernetes-dashboard-5f7b999d65",
                        "uid": "d65dc05e-e459-11e9-ba40-025000000001",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kubernetes-dashboard-certs",
                        "secret": {
                            "secretName": "kubernetes-dashboard-certs",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "tmp-volume",
                        "emptyDir": {}
                    },
                    {
                        "name": "kubernetes-dashboard-token-mz9nr",
                        "secret": {
                            "secretName": "kubernetes-dashboard-token-mz9nr",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kubernetes-dashboard",
                        "image": "k8s.gcr.io/kubernetes-dashboard-amd64:v1.10.1",
                        "args": [
                            "--auto-generate-certificates"
                        ],
                        "ports": [
                            {
                                "containerPort": 8443,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "kubernetes-dashboard-certs",
                                "mountPath": "/certs"
                            },
                            {
                                "name": "tmp-volume",
                                "mountPath": "/tmp"
                            },
                            {
                                "name": "kubernetes-dashboard-token-mz9nr",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/",
                                "port": 8443,
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 30,
                            "timeoutSeconds": 30,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "kubernetes-dashboard",
                "serviceAccount": "kubernetes-dashboard",
                "nodeName": "docker-desktop",
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node-role.kubernetes.io/master",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-10-01T14:43:31Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-10-01T16:32:37Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-10-01T16:32:37Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-10-01T14:43:31Z"
                    }
                ],
                "hostIP": "192.168.65.3",
                "podIP": "10.1.0.12",
                "startTime": "2019-10-01T14:43:31Z",
                "containerStatuses": [
                    {
                        "name": "kubernetes-dashboard",
                        "state": {
                            "running": {
                                "startedAt": "2019-10-01T16:32:36Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 4,
                        "image": "k8s.gcr.io/kubernetes-dashboard-amd64:v1.10.1",
                        "imageID": "docker-pullable://k8s.gcr.io/kubernetes-dashboard-amd64@sha256:0ae6b69432e78069c5ce2bcde0fe409c5c4d6f0f4d9cd50a17974fea38898747",
                        "containerID": "docker://1330549ba4e09d04bb27b3139676f9a92b7fc048c657422bbe14a58c7537a043"
                    }
                ],
                "qosClass": "BestEffort"
            }
        }
    ]
}
==== START logs for container coredns of pod kube-system/coredns-584795fc57-7pvbq ====
.:53
2019-10-01T16:32:38.310Z [INFO] CoreDNS-1.3.1
2019-10-01T16:32:38.310Z [INFO] linux/amd64, go1.11.4, 6b56a9c
CoreDNS-1.3.1
linux/amd64, go1.11.4, 6b56a9c
2019-10-01T16:32:38.310Z [INFO] plugin/reload: Running configuration MD5 = 599b9eb76b8c147408aed6a0bbe0f669
==== END logs for container coredns of pod kube-system/coredns-584795fc57-7pvbq ====
==== START logs for container coredns of pod kube-system/coredns-584795fc57-p6t6q ====
.:53
2019-10-01T16:32:44.240Z [INFO] CoreDNS-1.3.1
2019-10-01T16:32:44.241Z [INFO] linux/amd64, go1.11.4, 6b56a9c
CoreDNS-1.3.1
linux/amd64, go1.11.4, 6b56a9c
2019-10-01T16:32:44.241Z [INFO] plugin/reload: Running configuration MD5 = 599b9eb76b8c147408aed6a0bbe0f669
==== END logs for container coredns of pod kube-system/coredns-584795fc57-p6t6q ====
==== START logs for container etcd of pod kube-system/etcd-docker-desktop ====
2019-10-01 16:31:38.296276 I | etcdmain: etcd Version: 3.3.10
2019-10-01 16:31:38.299486 I | etcdmain: Git SHA: 27fc7e2
2019-10-01 16:31:38.299491 I | etcdmain: Go Version: go1.10.4
2019-10-01 16:31:38.299494 I | etcdmain: Go OS/Arch: linux/amd64
2019-10-01 16:31:38.299497 I | etcdmain: setting maximum number of CPUs to 4, total number of available CPUs is 4
2019-10-01 16:31:38.299560 N | etcdmain: the server is already initialized as member before, starting as etcd member...
2019-10-01 16:31:38.299904 I | embed: peerTLS: cert = /run/config/pki/etcd/peer.crt, key = /run/config/pki/etcd/peer.key, ca = , trusted-ca = /run/config/pki/etcd/ca.crt, client-cert-auth = true, crl-file = 
2019-10-01 16:31:38.304062 I | embed: listening for peers on https://192.168.65.3:2380
2019-10-01 16:31:38.306792 I | embed: listening for client requests on 127.0.0.1:2379
2019-10-01 16:31:38.306864 I | embed: listening for client requests on 192.168.65.3:2379
2019-10-01 16:31:38.350365 I | etcdserver: name = docker-desktop
2019-10-01 16:31:38.350386 I | etcdserver: data dir = /var/lib/etcd
2019-10-01 16:31:38.350391 I | etcdserver: member dir = /var/lib/etcd/member
2019-10-01 16:31:38.350393 I | etcdserver: heartbeat = 100ms
2019-10-01 16:31:38.350396 I | etcdserver: election = 1000ms
2019-10-01 16:31:38.350427 I | etcdserver: snapshot count = 10000
2019-10-01 16:31:38.350451 I | etcdserver: advertise client URLs = https://192.168.65.3:2379
2019-10-01 16:31:38.473443 I | etcdserver: restarting member 5a5fcaeaef75abff in cluster 6246e842008cf04d at commit index 9837
2019-10-01 16:31:38.475266 I | raft: 5a5fcaeaef75abff became follower at term 3
2019-10-01 16:31:38.475310 I | raft: newRaft 5a5fcaeaef75abff [peers: [], term: 3, commit: 9837, applied: 0, lastindex: 9837, lastterm: 3]
2019-10-01 16:31:38.481706 I | mvcc: restore compact to 7905
2019-10-01 16:31:38.504096 W | auth: simple token is not cryptographically signed
2019-10-01 16:31:38.509857 I | etcdserver: starting server... [version: 3.3.10, cluster version: to_be_decided]
2019-10-01 16:31:38.514548 I | etcdserver/membership: added member 5a5fcaeaef75abff [https://192.168.65.3:2380] to cluster 6246e842008cf04d
2019-10-01 16:31:38.515196 N | etcdserver/membership: set the initial cluster version to 3.3
2019-10-01 16:31:38.515260 I | etcdserver/api: enabled capabilities for version 3.3
2019-10-01 16:31:38.527471 I | embed: ClientTLS: cert = /run/config/pki/etcd/server.crt, key = /run/config/pki/etcd/server.key, ca = , trusted-ca = /run/config/pki/etcd/ca.crt, client-cert-auth = true, crl-file = 
2019-10-01 16:31:40.376069 I | raft: 5a5fcaeaef75abff is starting a new election at term 3
2019-10-01 16:31:40.376154 I | raft: 5a5fcaeaef75abff became candidate at term 4
2019-10-01 16:31:40.376220 I | raft: 5a5fcaeaef75abff received MsgVoteResp from 5a5fcaeaef75abff at term 4
2019-10-01 16:31:40.376241 I | raft: 5a5fcaeaef75abff became leader at term 4
2019-10-01 16:31:40.376262 I | raft: raft.node: 5a5fcaeaef75abff elected leader 5a5fcaeaef75abff at term 4
2019-10-01 16:31:40.376772 I | etcdserver: published {Name:docker-desktop ClientURLs:[https://192.168.65.3:2379]} to cluster 6246e842008cf04d
2019-10-01 16:31:40.377477 I | embed: ready to serve client requests
2019-10-01 16:31:40.381876 I | embed: ready to serve client requests
2019-10-01 16:31:40.386965 I | embed: serving client requests on 192.168.65.3:2379
2019-10-01 16:31:40.392888 I | embed: serving client requests on 127.0.0.1:2379
2019-10-01 16:31:40.406180 I | embed: rejected connection from "192.168.65.3:55992" (error "tls: failed to verify client's certificate: x509: certificate specifies an incompatible key usage", ServerName "")
WARNING: 2019/10/01 16:31:40 Failed to dial 192.168.65.3:2379: connection error: desc = "transport: authentication handshake failed: remote error: tls: bad certificate"; please retry.
2019-10-01 16:31:40.408590 I | embed: rejected connection from "127.0.0.1:57230" (error "tls: failed to verify client's certificate: x509: certificate specifies an incompatible key usage", ServerName "")
WARNING: 2019/10/01 16:31:40 Failed to dial 127.0.0.1:2379: connection error: desc = "transport: authentication handshake failed: remote error: tls: bad certificate"; please retry.
proto: no coders for int
proto: no encoder for ValueSize int [GetProperties]
2019-10-01 16:31:48.591966 W | etcdserver: read-only range request "key:\"/registry/clusterroles/system:aggregate-to-admin\" " with result "range_response_count:1 size:544" took too long (163.964207ms) to execute
2019-10-01 16:32:22.406663 I | etcdserver: start to snapshot (applied: 10001, lastsnap: 0)
2019-10-01 16:32:22.412781 I | etcdserver: saved snapshot at index 10001
2019-10-01 16:32:22.413076 I | etcdserver: compacted raft log at 5001
2019-10-01 16:41:40.389689 I | mvcc: store.index: compact 8984
2019-10-01 16:41:40.392872 I | mvcc: finished scheduled compaction at 8984 (took 2.579478ms)
2019-10-01 16:46:40.445158 I | mvcc: store.index: compact 9348
2019-10-01 16:46:40.446969 I | mvcc: finished scheduled compaction at 9348 (took 1.28614ms)
2019-10-01 16:51:40.455827 I | mvcc: store.index: compact 9714
2019-10-01 16:51:40.458860 I | mvcc: finished scheduled compaction at 9714 (took 2.570562ms)
2019-10-01 16:56:40.466238 I | mvcc: store.index: compact 10078
2019-10-01 16:56:40.467388 I | mvcc: finished scheduled compaction at 10078 (took 699.651µs)
2019-10-01 17:01:40.476934 I | mvcc: store.index: compact 10442
2019-10-01 17:01:40.477996 I | mvcc: finished scheduled compaction at 10442 (took 648.51µs)
2019-10-01 17:06:40.486687 I | mvcc: store.index: compact 10807
2019-10-01 17:06:40.495700 I | mvcc: finished scheduled compaction at 10807 (took 8.323781ms)
2019-10-01 17:11:40.492856 I | mvcc: store.index: compact 11172
2019-10-01 17:11:40.493739 I | mvcc: finished scheduled compaction at 11172 (took 504.65µs)
2019-10-01 17:16:40.503023 I | mvcc: store.index: compact 11537
2019-10-01 17:16:40.504173 I | mvcc: finished scheduled compaction at 11537 (took 848.057µs)
2019-10-01 17:21:40.508279 I | mvcc: store.index: compact 11901
2019-10-01 17:21:40.509219 I | mvcc: finished scheduled compaction at 11901 (took 613.226µs)
2019-10-01 17:26:40.524302 I | mvcc: store.index: compact 12266
2019-10-01 17:26:40.573286 I | mvcc: finished scheduled compaction at 12266 (took 46.36651ms)
2019-10-01 17:31:40.532349 I | mvcc: store.index: compact 12629
2019-10-01 17:31:40.533779 I | mvcc: finished scheduled compaction at 12629 (took 1.012932ms)
2019-10-01 17:36:40.546950 I | mvcc: store.index: compact 12996
2019-10-01 17:36:40.548796 I | mvcc: finished scheduled compaction at 12996 (took 1.468726ms)
2019-10-01 17:41:40.561155 I | mvcc: store.index: compact 13361
2019-10-01 17:41:40.564215 I | mvcc: finished scheduled compaction at 13361 (took 1.299865ms)
2019-10-01 17:46:40.573711 I | mvcc: store.index: compact 13725
2019-10-01 17:46:40.574688 I | mvcc: finished scheduled compaction at 13725 (took 588.804µs)
2019-10-01 17:51:40.581921 I | mvcc: store.index: compact 14091
2019-10-01 17:51:40.583083 I | mvcc: finished scheduled compaction at 14091 (took 741.02µs)
2019-10-01 17:56:40.593480 I | mvcc: store.index: compact 14455
2019-10-01 17:56:40.594761 I | mvcc: finished scheduled compaction at 14455 (took 858.01µs)
2019-10-01 18:01:40.603521 I | mvcc: store.index: compact 14819
2019-10-01 18:01:40.604438 I | mvcc: finished scheduled compaction at 14819 (took 713.511µs)
2019-10-01 18:06:40.609172 I | mvcc: store.index: compact 15186
2019-10-01 18:06:40.610398 I | mvcc: finished scheduled compaction at 15186 (took 871.582µs)
2019-10-01 18:11:40.615583 I | mvcc: store.index: compact 15550
2019-10-01 18:11:40.616532 I | mvcc: finished scheduled compaction at 15550 (took 551.663µs)
2019-10-01 18:16:40.626514 I | mvcc: store.index: compact 15915
2019-10-01 18:16:40.627848 I | mvcc: finished scheduled compaction at 15915 (took 1.130699ms)
2019-10-01 18:21:40.639042 I | mvcc: store.index: compact 16280
2019-10-01 18:21:40.640140 I | mvcc: finished scheduled compaction at 16280 (took 741.841µs)
2019-10-01 18:26:40.647940 I | mvcc: store.index: compact 16644
2019-10-01 18:26:40.648885 I | mvcc: finished scheduled compaction at 16644 (took 537.626µs)
2019-10-01 18:28:24.978992 I | etcdserver: start to snapshot (applied: 20002, lastsnap: 10001)
2019-10-01 18:28:24.993518 I | etcdserver: saved snapshot at index 20002
2019-10-01 18:28:24.993716 I | etcdserver: compacted raft log at 15002
==== END logs for container etcd of pod kube-system/etcd-docker-desktop ====
==== START logs for container kube-apiserver of pod kube-system/kube-apiserver-docker-desktop ====
Flag --insecure-port has been deprecated, This flag will be removed in a future version.
I1001 16:31:38.607972       1 server.go:559] external host was not specified, using 192.168.65.3
I1001 16:31:38.608442       1 server.go:146] Version: v1.14.6
I1001 16:31:39.200226       1 plugins.go:158] Loaded 9 mutating admission controller(s) successfully in the following order: NamespaceLifecycle,LimitRanger,ServiceAccount,NodeRestriction,TaintNodesByCondition,Priority,DefaultTolerationSeconds,DefaultStorageClass,MutatingAdmissionWebhook.
I1001 16:31:39.200288       1 plugins.go:161] Loaded 6 validating admission controller(s) successfully in the following order: LimitRanger,ServiceAccount,Priority,PersistentVolumeClaimResize,ValidatingAdmissionWebhook,ResourceQuota.
E1001 16:31:39.217254       1 prometheus.go:138] failed to register depth metric admission_quota_controller: duplicate metrics collector registration attempted
E1001 16:31:39.217406       1 prometheus.go:150] failed to register adds metric admission_quota_controller: duplicate metrics collector registration attempted
E1001 16:31:39.220069       1 prometheus.go:162] failed to register latency metric admission_quota_controller: duplicate metrics collector registration attempted
E1001 16:31:39.220279       1 prometheus.go:174] failed to register work_duration metric admission_quota_controller: duplicate metrics collector registration attempted
E1001 16:31:39.220363       1 prometheus.go:189] failed to register unfinished_work_seconds metric admission_quota_controller: duplicate metrics collector registration attempted
E1001 16:31:39.220377       1 prometheus.go:202] failed to register longest_running_processor_microseconds metric admission_quota_controller: duplicate metrics collector registration attempted
I1001 16:31:39.220431       1 plugins.go:158] Loaded 9 mutating admission controller(s) successfully in the following order: NamespaceLifecycle,LimitRanger,ServiceAccount,NodeRestriction,TaintNodesByCondition,Priority,DefaultTolerationSeconds,DefaultStorageClass,MutatingAdmissionWebhook.
I1001 16:31:39.220445       1 plugins.go:161] Loaded 6 validating admission controller(s) successfully in the following order: LimitRanger,ServiceAccount,Priority,PersistentVolumeClaimResize,ValidatingAdmissionWebhook,ResourceQuota.
I1001 16:31:39.230930       1 client.go:352] parsed scheme: ""
I1001 16:31:39.230992       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:39.231833       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:39.232233       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.198965       1 client.go:352] parsed scheme: ""
I1001 16:31:40.199046       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:40.199109       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:40.199227       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.406241       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.406890       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.407878       1 client.go:352] parsed scheme: ""
I1001 16:31:40.407916       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:40.407952       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:40.408110       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.417055       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.474198       1 master.go:233] Using reconciler: lease
I1001 16:31:40.475033       1 client.go:352] parsed scheme: ""
I1001 16:31:40.475078       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:40.475492       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:40.475647       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.484438       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.490625       1 client.go:352] parsed scheme: ""
I1001 16:31:40.490670       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:40.490710       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:40.490961       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.501840       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.505632       1 client.go:352] parsed scheme: ""
I1001 16:31:40.505668       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:40.505738       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:40.505778       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.516552       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.518926       1 client.go:352] parsed scheme: ""
I1001 16:31:40.519065       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:40.519280       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:40.519523       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.531891       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.533371       1 client.go:352] parsed scheme: ""
I1001 16:31:40.533513       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:40.533653       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:40.533839       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.541518       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.542256       1 client.go:352] parsed scheme: ""
I1001 16:31:40.542359       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:40.542420       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:40.542555       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.550362       1 client.go:352] parsed scheme: ""
I1001 16:31:40.550881       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:40.550565       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.551231       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:40.551368       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.564074       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.564755       1 client.go:352] parsed scheme: ""
I1001 16:31:40.564860       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:40.565161       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:40.565334       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.576508       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.577563       1 client.go:352] parsed scheme: ""
I1001 16:31:40.577582       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:40.577681       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:40.578168       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.591031       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.592414       1 client.go:352] parsed scheme: ""
I1001 16:31:40.592452       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:40.592532       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:40.592852       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.602183       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.603178       1 client.go:352] parsed scheme: ""
I1001 16:31:40.603214       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:40.603241       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:40.603313       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.612328       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.613374       1 client.go:352] parsed scheme: ""
I1001 16:31:40.613759       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:40.613908       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:40.614161       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.628165       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.630209       1 client.go:352] parsed scheme: ""
I1001 16:31:40.630255       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:40.630351       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:40.630403       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.638714       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.639189       1 client.go:352] parsed scheme: ""
I1001 16:31:40.639223       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:40.639247       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:40.639282       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.649240       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.649855       1 client.go:352] parsed scheme: ""
I1001 16:31:40.649901       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:40.650193       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:40.650274       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.663491       1 client.go:352] parsed scheme: ""
I1001 16:31:40.663542       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:40.663600       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:40.663822       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.664214       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.675264       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.676040       1 client.go:352] parsed scheme: ""
I1001 16:31:40.676082       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:40.676386       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:40.676564       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.687217       1 client.go:352] parsed scheme: ""
I1001 16:31:40.687276       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:40.687317       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:40.687428       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.687495       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.699001       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.789806       1 client.go:352] parsed scheme: ""
I1001 16:31:40.789844       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:40.789870       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:40.789911       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.797203       1 client.go:352] parsed scheme: ""
I1001 16:31:40.797240       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:40.797265       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:40.797382       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.797749       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.805357       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.805993       1 client.go:352] parsed scheme: ""
I1001 16:31:40.806026       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:40.806236       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:40.806497       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.814857       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.815496       1 client.go:352] parsed scheme: ""
I1001 16:31:40.815536       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:40.815602       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:40.815736       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.823210       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.824403       1 client.go:352] parsed scheme: ""
I1001 16:31:40.824436       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:40.824473       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:40.824691       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.832390       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.833170       1 client.go:352] parsed scheme: ""
I1001 16:31:40.833311       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:40.833416       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:40.833640       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.841399       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.842337       1 client.go:352] parsed scheme: ""
I1001 16:31:40.842372       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:40.842704       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:40.842767       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.849669       1 client.go:352] parsed scheme: ""
I1001 16:31:40.849706       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:40.849729       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:40.849806       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.849842       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.858799       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.859385       1 client.go:352] parsed scheme: ""
I1001 16:31:40.859419       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:40.859452       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:40.859519       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.867320       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.867755       1 client.go:352] parsed scheme: ""
I1001 16:31:40.867856       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:40.867922       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:40.868169       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.876348       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.878838       1 client.go:352] parsed scheme: ""
I1001 16:31:40.878937       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:40.879073       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:40.879254       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.886804       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.887283       1 client.go:352] parsed scheme: ""
I1001 16:31:40.887318       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:40.887342       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:40.887377       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.894946       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.896203       1 client.go:352] parsed scheme: ""
I1001 16:31:40.896265       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:40.896333       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:40.896567       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.904520       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.905279       1 client.go:352] parsed scheme: ""
I1001 16:31:40.905314       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:40.905339       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:40.905373       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.915312       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.916070       1 client.go:352] parsed scheme: ""
I1001 16:31:40.916152       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:40.916248       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:40.916287       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.924735       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.925188       1 client.go:352] parsed scheme: ""
I1001 16:31:40.925228       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:40.925254       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:40.925550       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.934621       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.935534       1 client.go:352] parsed scheme: ""
I1001 16:31:40.935679       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:40.935808       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:40.935984       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.947931       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.949404       1 client.go:352] parsed scheme: ""
I1001 16:31:40.949577       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:40.949775       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:40.950045       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.960991       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.961913       1 client.go:352] parsed scheme: ""
I1001 16:31:40.961931       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:40.962001       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:40.962440       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.973874       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.974845       1 client.go:352] parsed scheme: ""
I1001 16:31:40.974888       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:40.974960       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:40.975214       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.985172       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.986124       1 client.go:352] parsed scheme: ""
I1001 16:31:40.986158       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:40.986191       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:40.986323       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.995580       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:40.996589       1 client.go:352] parsed scheme: ""
I1001 16:31:40.996626       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:40.996649       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:40.996719       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.011983       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.014541       1 client.go:352] parsed scheme: ""
I1001 16:31:41.014832       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:41.016756       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:41.017053       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.028619       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.030527       1 client.go:352] parsed scheme: ""
I1001 16:31:41.030581       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:41.030880       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:41.030991       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.043266       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.043488       1 client.go:352] parsed scheme: ""
I1001 16:31:41.043536       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:41.043570       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:41.043781       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.057729       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.058319       1 client.go:352] parsed scheme: ""
I1001 16:31:41.058329       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:41.058352       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:41.058437       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.065596       1 client.go:352] parsed scheme: ""
I1001 16:31:41.065635       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:41.065662       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:41.065812       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.065911       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.074283       1 client.go:352] parsed scheme: ""
I1001 16:31:41.074325       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:41.074353       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:41.074495       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.074608       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.082911       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.084782       1 client.go:352] parsed scheme: ""
I1001 16:31:41.084845       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:41.084900       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:41.085003       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.092639       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.094040       1 client.go:352] parsed scheme: ""
I1001 16:31:41.094050       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:41.094073       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:41.094097       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.101502       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.102221       1 client.go:352] parsed scheme: ""
I1001 16:31:41.102309       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:41.102407       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:41.102564       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.109739       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.110102       1 client.go:352] parsed scheme: ""
I1001 16:31:41.110142       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:41.110167       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:41.110210       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.158506       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.159454       1 client.go:352] parsed scheme: ""
I1001 16:31:41.159463       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:41.159578       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:41.159722       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.167388       1 client.go:352] parsed scheme: ""
I1001 16:31:41.167492       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:41.167595       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:41.167827       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.167960       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.178753       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.179910       1 client.go:352] parsed scheme: ""
I1001 16:31:41.180051       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:41.180080       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:41.180293       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.187473       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.188070       1 client.go:352] parsed scheme: ""
I1001 16:31:41.188153       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:41.188258       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:41.188313       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.196251       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.196638       1 client.go:352] parsed scheme: ""
I1001 16:31:41.196677       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:41.196701       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:41.196840       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.204778       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.204937       1 client.go:352] parsed scheme: ""
I1001 16:31:41.204972       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:41.205070       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:41.205416       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.263385       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.264440       1 client.go:352] parsed scheme: ""
I1001 16:31:41.264483       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:41.264523       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:41.264556       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.274271       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.275870       1 client.go:352] parsed scheme: ""
I1001 16:31:41.275909       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:41.275963       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:41.276116       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.285387       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.286421       1 client.go:352] parsed scheme: ""
I1001 16:31:41.286549       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:41.286694       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:41.286978       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.295788       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.296527       1 client.go:352] parsed scheme: ""
I1001 16:31:41.296613       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:41.296737       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:41.296867       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.304170       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.306070       1 client.go:352] parsed scheme: ""
I1001 16:31:41.306146       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:41.306480       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:41.306592       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.315720       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.316921       1 client.go:352] parsed scheme: ""
I1001 16:31:41.316960       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:41.317027       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:41.317089       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.328087       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.328845       1 client.go:352] parsed scheme: ""
I1001 16:31:41.328882       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:41.328906       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:41.329106       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.339629       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.340843       1 client.go:352] parsed scheme: ""
I1001 16:31:41.340923       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:41.340967       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:41.340998       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.351036       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.352002       1 client.go:352] parsed scheme: ""
I1001 16:31:41.352105       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:41.352196       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:41.352329       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.360958       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.361938       1 client.go:352] parsed scheme: ""
I1001 16:31:41.361994       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:41.362267       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:41.362401       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.370455       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.371804       1 client.go:352] parsed scheme: ""
I1001 16:31:41.371876       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:41.372950       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:41.373169       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.380721       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.381057       1 client.go:352] parsed scheme: ""
I1001 16:31:41.381090       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:41.381113       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:41.381169       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.389116       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.389693       1 client.go:352] parsed scheme: ""
I1001 16:31:41.389799       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:41.389944       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:41.390149       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.398263       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.399197       1 client.go:352] parsed scheme: ""
I1001 16:31:41.399251       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:41.399288       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:41.399389       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:41.407487       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
W1001 16:31:41.593509       1 genericapiserver.go:344] Skipping API batch/v2alpha1 because it has no resources.
W1001 16:31:41.598306       1 genericapiserver.go:344] Skipping API node.k8s.io/v1alpha1 because it has no resources.
W1001 16:31:41.603704       1 genericapiserver.go:344] Skipping API rbac.authorization.k8s.io/v1alpha1 because it has no resources.
W1001 16:31:41.605322       1 genericapiserver.go:344] Skipping API scheduling.k8s.io/v1alpha1 because it has no resources.
W1001 16:31:41.610628       1 genericapiserver.go:344] Skipping API storage.k8s.io/v1alpha1 because it has no resources.
E1001 16:31:43.307343       1 prometheus.go:138] failed to register depth metric admission_quota_controller: duplicate metrics collector registration attempted
E1001 16:31:43.307394       1 prometheus.go:150] failed to register adds metric admission_quota_controller: duplicate metrics collector registration attempted
E1001 16:31:43.307525       1 prometheus.go:162] failed to register latency metric admission_quota_controller: duplicate metrics collector registration attempted
E1001 16:31:43.307607       1 prometheus.go:174] failed to register work_duration metric admission_quota_controller: duplicate metrics collector registration attempted
E1001 16:31:43.307662       1 prometheus.go:189] failed to register unfinished_work_seconds metric admission_quota_controller: duplicate metrics collector registration attempted
E1001 16:31:43.307675       1 prometheus.go:202] failed to register longest_running_processor_microseconds metric admission_quota_controller: duplicate metrics collector registration attempted
I1001 16:31:43.307695       1 plugins.go:158] Loaded 9 mutating admission controller(s) successfully in the following order: NamespaceLifecycle,LimitRanger,ServiceAccount,NodeRestriction,TaintNodesByCondition,Priority,DefaultTolerationSeconds,DefaultStorageClass,MutatingAdmissionWebhook.
I1001 16:31:43.307702       1 plugins.go:161] Loaded 6 validating admission controller(s) successfully in the following order: LimitRanger,ServiceAccount,Priority,PersistentVolumeClaimResize,ValidatingAdmissionWebhook,ResourceQuota.
I1001 16:31:43.310468       1 client.go:352] parsed scheme: ""
I1001 16:31:43.310524       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:43.310568       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:43.310612       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:43.323917       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:43.324477       1 client.go:352] parsed scheme: ""
I1001 16:31:43.327729       1 client.go:352] scheme "" not registered, fallback to default scheme
I1001 16:31:43.328320       1 asm_amd64.s:1337] ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 0  <nil>}]
I1001 16:31:43.332009       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:43.342492       1 asm_amd64.s:1337] balancerWrapper: got update addr from Notify: [{127.0.0.1:2379 <nil>}]
I1001 16:31:47.341062       1 secure_serving.go:116] Serving securely on [::]:6443
I1001 16:31:47.341788       1 autoregister_controller.go:139] Starting autoregister controller
I1001 16:31:47.341874       1 cache.go:32] Waiting for caches to sync for autoregister controller
I1001 16:31:47.342046       1 crd_finalizer.go:242] Starting CRDFinalizer
I1001 16:31:47.342693       1 customresource_discovery_controller.go:208] Starting DiscoveryController
I1001 16:31:47.343108       1 naming_controller.go:284] Starting NamingConditionController
I1001 16:31:47.343137       1 establishing_controller.go:73] Starting EstablishingController
I1001 16:31:47.343267       1 crdregistration_controller.go:112] Starting crd-autoregister controller
I1001 16:31:47.343277       1 controller_utils.go:1027] Waiting for caches to sync for crd-autoregister controller
I1001 16:31:47.343312       1 controller.go:81] Starting OpenAPI AggregationController
I1001 16:31:47.356457       1 apiservice_controller.go:94] Starting APIServiceRegistrationController
I1001 16:31:47.356555       1 cache.go:32] Waiting for caches to sync for APIServiceRegistrationController controller
I1001 16:31:47.357055       1 available_controller.go:320] Starting AvailableConditionController
I1001 16:31:47.357126       1 cache.go:32] Waiting for caches to sync for AvailableConditionController controller
E1001 16:31:47.370364       1 controller.go:148] Unable to remove old endpoints from kubernetes service: StorageError: key not found, Code: 1, Key: /registry/masterleases/192.168.65.3, ResourceVersion: 0, AdditionalErrorMsg: 
I1001 16:31:47.539262       1 controller.go:606] quota admission added evaluator for: leases.coordination.k8s.io
I1001 16:31:47.545643       1 controller_utils.go:1034] Caches are synced for crd-autoregister controller
I1001 16:31:47.558437       1 cache.go:39] Caches are synced for AvailableConditionController controller
I1001 16:31:47.559183       1 cache.go:39] Caches are synced for APIServiceRegistrationController controller
I1001 16:31:47.642124       1 cache.go:39] Caches are synced for autoregister controller
I1001 16:31:48.340300       1 controller.go:107] OpenAPI AggregationController: Processing item 
I1001 16:31:48.411184       1 storage_scheduling.go:122] all system priority classes are created successfully or already exist.
I1001 16:31:49.658245       1 controller.go:130] OpenAPI AggregationController: action for item : Nothing (removed from the queue).
I1001 16:31:49.658397       1 controller.go:130] OpenAPI AggregationController: action for item k8s_internal_local_delegation_chain_0000000000: Nothing (removed from the queue).
I1001 16:31:50.660339       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
E1001 16:31:52.570495       1 available_controller.go:353] v1beta2.compose.docker.com failed with: Get https://10.107.135.82:443: net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)
E1001 16:31:52.571874       1 available_controller.go:353] v1alpha3.compose.docker.com failed with: Get https://10.107.135.82:443: net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)
E1001 16:31:52.572457       1 available_controller.go:353] v1beta1.compose.docker.com failed with: Get https://10.107.135.82:443: net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)
E1001 16:31:52.764935       1 available_controller.go:353] v1beta1.compose.docker.com failed with: Operation cannot be fulfilled on apiservices.apiregistration.k8s.io "v1beta1.compose.docker.com": the object has been modified; please apply your changes to the latest version and try again
E1001 16:31:52.770992       1 available_controller.go:353] v1beta1.compose.docker.com failed with: Get https://10.107.135.82:443: dial tcp 10.107.135.82:443: connect: connection refused
E1001 16:31:52.771700       1 available_controller.go:353] v1beta1.compose.docker.com failed with: Get https://10.107.135.82:443: dial tcp 10.107.135.82:443: connect: connection refused
E1001 16:31:52.775948       1 available_controller.go:353] v1beta1.compose.docker.com failed with: Get https://10.107.135.82:443: dial tcp 10.107.135.82:443: connect: connection refused
E1001 16:31:52.856507       1 available_controller.go:353] v1beta1.compose.docker.com failed with: Get https://10.107.135.82:443: dial tcp 10.107.135.82:443: connect: connection refused
E1001 16:31:53.018369       1 available_controller.go:353] v1beta1.compose.docker.com failed with: Get https://10.107.135.82:443: dial tcp 10.107.135.82:443: connect: connection refused
E1001 16:31:53.339844       1 available_controller.go:353] v1beta1.compose.docker.com failed with: Get https://10.107.135.82:443: dial tcp 10.107.135.82:443: connect: connection refused
E1001 16:31:53.980673       1 available_controller.go:353] v1beta1.compose.docker.com failed with: Get https://10.107.135.82:443: dial tcp 10.107.135.82:443: connect: connection refused
E1001 16:31:55.261651       1 available_controller.go:353] v1beta1.compose.docker.com failed with: Get https://10.107.135.82:443: dial tcp 10.107.135.82:443: connect: connection refused
E1001 16:31:57.822430       1 available_controller.go:353] v1beta1.compose.docker.com failed with: Get https://10.107.135.82:443: dial tcp 10.107.135.82:443: connect: connection refused
E1001 16:32:02.944328       1 available_controller.go:353] v1beta1.compose.docker.com failed with: Get https://10.107.135.82:443: dial tcp 10.107.135.82:443: connect: connection refused
I1001 16:32:06.296453       1 controller.go:606] quota admission added evaluator for: endpoints
E1001 16:32:21.259882       1 controller.go:114] loading OpenAPI spec for "v1beta1.compose.docker.com" failed with: failed to retrieve openAPI spec, http error: ResponseCode: 503, Body: Error: 'dial tcp 10.107.135.82:443: i/o timeout'
Trying to reach: 'https://10.107.135.82:443/openapi/v2', Header: map[]
I1001 16:32:21.259898       1 controller.go:127] OpenAPI AggregationController: action for item v1beta1.compose.docker.com: Rate Limited Requeue.
I1001 16:32:21.260056       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 16:32:22.423063       1 log.go:172] suppressing panic for copyResponse error in test; copy error: context canceled
I1001 16:32:22.583282       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 16:33:21.257228       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 16:33:22.580031       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 16:33:23.156805       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 16:34:21.918033       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 16:34:22.581881       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 16:34:23.159256       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 16:35:21.920998       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 16:35:22.583781       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 16:35:23.161033       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 16:36:21.925700       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 16:36:22.586079       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 16:36:23.163684       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 16:37:21.929259       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 16:37:22.587982       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 16:37:23.166320       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 16:38:21.941204       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 16:38:22.589381       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 16:38:23.167987       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 16:39:21.945339       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 16:39:22.591603       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 16:39:23.169650       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 16:40:21.949517       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 16:40:22.595500       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 16:40:23.171179       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 16:41:21.952816       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 16:41:22.597256       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 16:41:23.173691       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 16:42:21.956427       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 16:42:22.599685       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 16:42:23.175503       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 16:43:21.961005       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 16:43:22.602868       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 16:43:23.178097       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 16:44:21.963855       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 16:44:22.604897       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 16:44:23.180560       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
E1001 16:44:30.841436       1 watcher.go:208] watch chan error: etcdserver: mvcc: required revision has been compacted
I1001 16:45:21.968425       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 16:45:22.608042       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 16:45:23.183064       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 16:46:22.025900       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 16:46:22.646892       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 16:46:23.222314       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 16:47:22.038596       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 16:47:22.657282       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 16:47:23.233036       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 16:48:22.064957       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 16:48:22.658846       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 16:48:23.234766       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 16:49:22.067653       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 16:49:22.660959       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 16:49:23.236735       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 16:50:22.086486       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 16:50:22.662619       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 16:50:23.238652       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 16:51:22.093231       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 16:51:22.664514       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 16:51:23.240407       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 16:52:22.096315       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 16:52:22.666496       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 16:52:23.241658       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 16:53:22.100587       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 16:53:22.668251       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 16:53:23.243809       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 16:54:22.104897       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 16:54:22.669955       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 16:54:23.245179       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 16:55:22.108464       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 16:55:22.671983       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 16:55:23.247151       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
E1001 16:55:26.983758       1 watcher.go:208] watch chan error: etcdserver: mvcc: required revision has been compacted
I1001 16:56:22.111712       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 16:56:22.673388       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 16:56:23.249137       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 16:57:22.115609       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 16:57:22.674999       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 16:57:23.251183       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 16:58:22.118971       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 16:58:22.676938       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 16:58:23.253025       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 16:59:22.124780       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 16:59:22.682540       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 16:59:23.254561       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:00:22.128824       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:00:22.684205       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:00:23.256010       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:01:22.131968       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:01:22.685952       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:01:23.257673       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:02:22.134989       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:02:22.688242       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:02:23.259404       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:03:22.138204       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:03:22.689774       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:03:23.261897       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
E1001 17:03:30.082470       1 watcher.go:208] watch chan error: etcdserver: mvcc: required revision has been compacted
I1001 17:04:22.141446       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:04:22.691137       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:04:23.263815       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:05:22.144452       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:05:22.693045       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:05:23.265761       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:06:22.150393       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:06:22.697345       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:06:23.270265       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:07:22.154595       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:07:22.699817       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:07:23.272272       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:08:22.159444       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:08:22.701574       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:08:23.273849       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:09:22.163179       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:09:22.703994       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:09:23.275403       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:10:22.166915       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:10:22.706045       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:10:23.277282       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:11:22.171333       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:11:22.707921       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:11:23.278965       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:12:22.175246       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:12:22.709913       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:12:23.281643       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
E1001 17:13:04.182705       1 watcher.go:208] watch chan error: etcdserver: mvcc: required revision has been compacted
I1001 17:13:22.178416       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:13:22.712168       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:13:23.283810       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:14:22.182266       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:14:22.714242       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:14:23.285443       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:15:22.185073       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:15:22.715941       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:15:23.287676       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:16:22.188768       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:16:22.717803       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:16:23.289289       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:17:22.193101       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:17:22.719799       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:17:23.290675       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:18:22.196847       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:18:22.722102       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:18:23.292552       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:19:22.199930       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:19:22.728692       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:19:23.295402       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:20:22.204718       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:20:22.732737       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:20:23.296960       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:21:22.208343       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:21:22.734433       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:21:23.299227       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
E1001 17:21:42.261598       1 watcher.go:208] watch chan error: etcdserver: mvcc: required revision has been compacted
I1001 17:22:22.212351       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:22:22.736380       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:22:23.301353       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:23:22.215609       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:23:22.738691       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:23:23.303217       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:24:22.218219       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:24:22.741766       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:24:23.304892       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:25:22.224065       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:25:22.743918       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:25:23.306196       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:26:22.228540       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:26:22.745317       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:26:23.308068       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:27:22.233530       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:27:22.747424       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:27:23.309788       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:28:22.236119       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:28:22.749181       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:28:23.311101       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:29:22.239213       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:29:22.751411       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:29:23.312972       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:30:22.242144       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:30:22.753501       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:30:23.315428       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:31:22.244793       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:31:22.755179       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:31:23.317599       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:32:22.249849       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:32:22.757155       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:32:23.319494       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:33:22.253751       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:33:22.759181       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:33:23.324191       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:34:22.257726       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:34:22.761403       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:34:23.326323       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:35:22.261315       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:35:22.763373       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:35:23.328437       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:36:22.266368       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:36:22.765360       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:36:23.332193       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:37:22.269942       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:37:22.768303       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:37:23.334711       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:38:22.274365       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:38:22.771313       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:38:23.337027       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:39:22.278048       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:39:22.774041       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:39:23.339230       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:40:22.281605       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:40:22.776163       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:40:23.341770       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:41:22.287990       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:41:22.783243       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:41:23.347684       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:42:22.292300       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:42:22.786843       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:42:23.351455       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:43:22.296423       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:43:22.788527       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:43:23.354180       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:44:22.300182       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:44:22.790171       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:44:23.356481       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:45:22.305219       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:45:22.792324       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:45:23.358570       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
E1001 17:45:33.390842       1 watcher.go:208] watch chan error: etcdserver: mvcc: required revision has been compacted
I1001 17:46:22.309340       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:46:22.794852       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:46:23.361062       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:47:22.313880       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:47:22.797552       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:47:23.362864       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:48:22.318122       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:48:22.799559       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:48:23.365361       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:49:22.322383       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:49:22.801558       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:49:23.367874       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:50:22.326135       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:50:22.806031       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:50:23.370220       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:51:22.329176       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:51:22.809090       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:51:23.372672       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:52:22.333480       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:52:22.811927       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:52:23.375314       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:53:22.336962       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:53:22.814306       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:53:23.377411       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
E1001 17:53:28.437791       1 watcher.go:208] watch chan error: etcdserver: mvcc: required revision has been compacted
I1001 17:54:22.341473       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:54:22.817261       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:54:23.386171       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:55:22.345016       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:55:22.820024       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:55:23.388337       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:56:22.348776       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:56:22.821603       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:56:23.411165       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:57:22.352548       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:57:22.823317       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:57:23.413166       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:58:22.355957       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:58:22.824930       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:58:23.416055       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 17:59:22.360145       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 17:59:22.826571       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 17:59:23.418014       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 18:00:22.365383       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 18:00:22.829140       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 18:00:23.419857       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 18:01:22.371010       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 18:01:22.831978       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 18:01:23.421513       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 18:02:22.374398       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 18:02:22.834048       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 18:02:23.423056       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 18:03:22.379540       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 18:03:22.836101       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 18:03:23.424875       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
E1001 18:04:18.553519       1 watcher.go:208] watch chan error: etcdserver: mvcc: required revision has been compacted
I1001 18:04:22.391135       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 18:04:22.837682       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 18:04:23.427803       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 18:05:22.395952       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 18:05:22.840699       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 18:05:23.430026       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 18:06:22.399878       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 18:06:22.843280       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 18:06:23.431762       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 18:07:22.403242       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 18:07:22.845180       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 18:07:23.433402       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 18:08:22.407389       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 18:08:22.847294       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 18:08:23.435309       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 18:09:22.412521       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 18:09:22.849423       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 18:09:23.438619       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 18:10:22.415845       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 18:10:22.850821       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 18:10:23.440715       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 18:11:22.419273       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 18:11:22.853007       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 18:11:23.442902       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 18:12:22.423391       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 18:12:22.855420       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 18:12:23.445056       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 18:13:22.428327       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 18:13:22.857670       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 18:13:23.448114       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 18:14:22.433028       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 18:14:22.859726       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 18:14:23.452254       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 18:15:22.436697       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 18:15:22.861498       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 18:15:23.454375       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 18:16:22.440811       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 18:16:22.864199       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 18:16:23.456324       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 18:17:22.444176       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 18:17:22.866038       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 18:17:23.458213       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
E1001 18:17:37.575806       1 watcher.go:208] watch chan error: etcdserver: mvcc: required revision has been compacted
I1001 18:18:22.447190       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 18:18:22.867627       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 18:18:23.459474       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 18:19:22.453374       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 18:19:22.869416       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 18:19:23.461131       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 18:20:22.457797       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 18:20:22.871335       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 18:20:23.463153       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 18:21:22.461891       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 18:21:22.873284       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 18:21:23.465365       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 18:22:22.466684       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 18:22:22.874845       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 18:22:23.467544       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 18:22:26.426160       1 controller.go:606] quota admission added evaluator for: serviceaccounts
I1001 18:22:26.579195       1 controller.go:606] quota admission added evaluator for: roles.rbac.authorization.k8s.io
I1001 18:22:26.608530       1 controller.go:606] quota admission added evaluator for: rolebindings.rbac.authorization.k8s.io
I1001 18:22:26.645205       1 controller.go:606] quota admission added evaluator for: deployments.apps
I1001 18:22:26.698675       1 controller.go:606] quota admission added evaluator for: replicasets.apps
I1001 18:23:22.470939       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 18:23:22.876712       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 18:23:23.470112       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 18:24:22.475172       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 18:24:22.878730       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 18:24:23.472621       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 18:25:22.480279       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 18:25:22.880539       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 18:25:23.474440       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 18:26:22.483285       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 18:26:22.882006       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 18:26:23.476295       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 18:27:22.487303       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 18:27:22.884237       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 18:27:23.477920       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 18:28:22.490450       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 18:28:22.885864       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 18:28:23.479684       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
I1001 18:29:22.495555       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.compose.docker.com
I1001 18:29:22.887893       1 controller.go:107] OpenAPI AggregationController: Processing item v1beta2.compose.docker.com
I1001 18:29:23.481744       1 controller.go:107] OpenAPI AggregationController: Processing item v1alpha3.compose.docker.com
==== END logs for container kube-apiserver of pod kube-system/kube-apiserver-docker-desktop ====
==== START logs for container kube-controller-manager of pod kube-system/kube-controller-manager-docker-desktop ====
I1001 16:31:39.440960       1 serving.go:319] Generated self-signed cert in-memory
I1001 16:31:40.139934       1 controllermanager.go:155] Version: v1.14.6
I1001 16:31:40.141756       1 secure_serving.go:116] Serving securely on 127.0.0.1:10257
I1001 16:31:40.143168       1 deprecated_insecure_serving.go:51] Serving insecurely on [::]:10252
I1001 16:31:40.143621       1 leaderelection.go:217] attempting to acquire leader lease  kube-system/kube-controller-manager...
E1001 16:31:47.498802       1 leaderelection.go:306] error retrieving resource lock kube-system/kube-controller-manager: endpoints "kube-controller-manager" is forbidden: User "system:kube-controller-manager" cannot get resource "endpoints" in API group "" in the namespace "kube-system": RBAC: [role.rbac.authorization.k8s.io "extension-apiserver-authentication-reader" not found, role.rbac.authorization.k8s.io "system::leader-locking-kube-controller-manager" not found]
I1001 16:32:07.678453       1 leaderelection.go:227] successfully acquired lease kube-system/kube-controller-manager
I1001 16:32:07.685806       1 event.go:209] Event(v1.ObjectReference{Kind:"Endpoints", Namespace:"kube-system", Name:"kube-controller-manager", UID:"398f6875-e459-11e9-ba40-025000000001", APIVersion:"v1", ResourceVersion:"8604", FieldPath:""}): type: 'Normal' reason: 'LeaderElection' docker-desktop_f2202336-e468-11e9-a1eb-025000000001 became leader
I1001 16:32:08.057676       1 plugins.go:103] No cloud provider specified.
I1001 16:32:08.061607       1 controller_utils.go:1027] Waiting for caches to sync for tokens controller
I1001 16:32:08.078265       1 controllermanager.go:497] Started "endpoint"
I1001 16:32:08.079782       1 endpoints_controller.go:166] Starting endpoint controller
I1001 16:32:08.079860       1 controller_utils.go:1027] Waiting for caches to sync for endpoint controller
I1001 16:32:08.162864       1 controller_utils.go:1034] Caches are synced for tokens controller
I1001 16:32:08.451441       1 resource_quota_monitor.go:228] QuotaMonitor created object count evaluator for ingresses.networking.k8s.io
I1001 16:32:08.451659       1 resource_quota_monitor.go:228] QuotaMonitor created object count evaluator for statefulsets.apps
I1001 16:32:08.451718       1 resource_quota_monitor.go:228] QuotaMonitor created object count evaluator for daemonsets.apps
I1001 16:32:08.451772       1 resource_quota_monitor.go:228] QuotaMonitor created object count evaluator for horizontalpodautoscalers.autoscaling
I1001 16:32:08.451839       1 resource_quota_monitor.go:228] QuotaMonitor created object count evaluator for networkpolicies.networking.k8s.io
I1001 16:32:08.451907       1 resource_quota_monitor.go:228] QuotaMonitor created object count evaluator for daemonsets.extensions
I1001 16:32:08.451999       1 resource_quota_monitor.go:228] QuotaMonitor created object count evaluator for rolebindings.rbac.authorization.k8s.io
W1001 16:32:08.452049       1 shared_informer.go:311] resyncPeriod 49283967894669 is smaller than resyncCheckPeriod 54739953269991 and the informer has already started. Changing it to 54739953269991
I1001 16:32:08.452162       1 resource_quota_monitor.go:228] QuotaMonitor created object count evaluator for serviceaccounts
I1001 16:32:08.452279       1 resource_quota_monitor.go:228] QuotaMonitor created object count evaluator for replicasets.extensions
I1001 16:32:08.452311       1 resource_quota_monitor.go:228] QuotaMonitor created object count evaluator for controllerrevisions.apps
I1001 16:32:08.452336       1 resource_quota_monitor.go:228] QuotaMonitor created object count evaluator for cronjobs.batch
I1001 16:32:08.452385       1 resource_quota_monitor.go:228] QuotaMonitor created object count evaluator for limitranges
I1001 16:32:08.452405       1 resource_quota_monitor.go:228] QuotaMonitor created object count evaluator for ingresses.extensions
I1001 16:32:08.452429       1 resource_quota_monitor.go:228] QuotaMonitor created object count evaluator for roles.rbac.authorization.k8s.io
I1001 16:32:08.452450       1 resource_quota_monitor.go:228] QuotaMonitor created object count evaluator for leases.coordination.k8s.io
I1001 16:32:08.452494       1 resource_quota_monitor.go:228] QuotaMonitor created object count evaluator for replicasets.apps
W1001 16:32:08.452526       1 shared_informer.go:311] resyncPeriod 48864075042952 is smaller than resyncCheckPeriod 54739953269991 and the informer has already started. Changing it to 54739953269991
I1001 16:32:08.452588       1 resource_quota_monitor.go:228] QuotaMonitor created object count evaluator for events.events.k8s.io
I1001 16:32:08.452608       1 resource_quota_monitor.go:228] QuotaMonitor created object count evaluator for jobs.batch
I1001 16:32:08.452628       1 resource_quota_monitor.go:228] QuotaMonitor created object count evaluator for poddisruptionbudgets.policy
I1001 16:32:08.452649       1 resource_quota_monitor.go:228] QuotaMonitor created object count evaluator for podtemplates
I1001 16:32:08.452665       1 resource_quota_monitor.go:228] QuotaMonitor created object count evaluator for endpoints
I1001 16:32:08.453612       1 resource_quota_monitor.go:228] QuotaMonitor created object count evaluator for deployments.extensions
I1001 16:32:08.453679       1 resource_quota_monitor.go:228] QuotaMonitor created object count evaluator for deployments.apps
E1001 16:32:08.453743       1 resource_quota_controller.go:171] initial monitor sync has error: [couldn't start monitor for resource "compose.docker.com/v1alpha3, Resource=stacks": unable to monitor quota for resource "compose.docker.com/v1alpha3, Resource=stacks", couldn't start monitor for resource "extensions/v1beta1, Resource=networkpolicies": unable to monitor quota for resource "extensions/v1beta1, Resource=networkpolicies"]
I1001 16:32:08.453788       1 controllermanager.go:497] Started "resourcequota"
I1001 16:32:08.453978       1 resource_quota_controller.go:276] Starting resource quota controller
I1001 16:32:08.454112       1 controller_utils.go:1027] Waiting for caches to sync for resource quota controller
I1001 16:32:08.454365       1 resource_quota_monitor.go:301] QuotaMonitor running
I1001 16:32:08.462153       1 controllermanager.go:497] Started "podgc"
I1001 16:32:08.462216       1 gc_controller.go:76] Starting GC controller
I1001 16:32:08.462503       1 controller_utils.go:1027] Waiting for caches to sync for GC controller
I1001 16:32:08.498064       1 controllermanager.go:497] Started "horizontalpodautoscaling"
I1001 16:32:08.498260       1 horizontal.go:156] Starting HPA controller
I1001 16:32:08.498304       1 controller_utils.go:1027] Waiting for caches to sync for HPA controller
I1001 16:32:08.506293       1 controllermanager.go:497] Started "csrcleaner"
I1001 16:32:08.506462       1 cleaner.go:81] Starting CSR cleaner controller
I1001 16:32:08.513740       1 controllermanager.go:497] Started "ttl"
I1001 16:32:08.513875       1 ttl_controller.go:116] Starting TTL controller
I1001 16:32:08.513914       1 controller_utils.go:1027] Waiting for caches to sync for TTL controller
I1001 16:32:08.521261       1 controllermanager.go:497] Started "persistentvolume-expander"
I1001 16:32:08.521418       1 expand_controller.go:153] Starting expand controller
I1001 16:32:08.521523       1 controller_utils.go:1027] Waiting for caches to sync for expand controller
I1001 16:32:08.529528       1 controllermanager.go:497] Started "job"
I1001 16:32:08.529539       1 job_controller.go:143] Starting job controller
I1001 16:32:08.529722       1 controller_utils.go:1027] Waiting for caches to sync for job controller
I1001 16:32:08.538242       1 controllermanager.go:497] Started "disruption"
I1001 16:32:08.538303       1 disruption.go:286] Starting disruption controller
I1001 16:32:08.538327       1 controller_utils.go:1027] Waiting for caches to sync for disruption controller
I1001 16:32:08.609364       1 controllermanager.go:497] Started "tokencleaner"
I1001 16:32:08.609459       1 tokencleaner.go:116] Starting token cleaner controller
I1001 16:32:08.609477       1 controller_utils.go:1027] Waiting for caches to sync for token_cleaner controller
I1001 16:32:08.709784       1 controller_utils.go:1034] Caches are synced for token_cleaner controller
I1001 16:32:08.762222       1 controllermanager.go:497] Started "pvc-protection"
W1001 16:32:08.762278       1 controllermanager.go:489] Skipping "ttl-after-finished"
I1001 16:32:08.762348       1 pvc_protection_controller.go:99] Starting PVC protection controller
I1001 16:32:08.762394       1 controller_utils.go:1027] Waiting for caches to sync for PVC protection controller
I1001 16:32:08.910270       1 controllermanager.go:497] Started "statefulset"
I1001 16:32:08.910383       1 stateful_set.go:151] Starting stateful set controller
I1001 16:32:08.910416       1 controller_utils.go:1027] Waiting for caches to sync for stateful set controller
I1001 16:32:09.056760       1 controllermanager.go:497] Started "bootstrapsigner"
I1001 16:32:09.056831       1 controller_utils.go:1027] Waiting for caches to sync for bootstrap_signer controller
I1001 16:32:09.209037       1 controllermanager.go:497] Started "clusterrole-aggregation"
W1001 16:32:09.209214       1 controllermanager.go:489] Skipping "root-ca-cert-publisher"
I1001 16:32:09.209069       1 clusterroleaggregation_controller.go:148] Starting ClusterRoleAggregator
I1001 16:32:09.209605       1 controller_utils.go:1027] Waiting for caches to sync for ClusterRoleAggregator controller
I1001 16:32:09.358693       1 controllermanager.go:497] Started "replicaset"
I1001 16:32:09.358780       1 replica_set.go:182] Starting replicaset controller
I1001 16:32:09.358798       1 controller_utils.go:1027] Waiting for caches to sync for ReplicaSet controller
E1001 16:32:09.506852       1 core.go:77] Failed to start service controller: WARNING: no cloud provider provided, services of type LoadBalancer will fail
W1001 16:32:09.507014       1 controllermanager.go:489] Skipping "service"
I1001 16:32:09.660434       1 node_lifecycle_controller.go:77] Sending events to api server
E1001 16:32:09.660830       1 core.go:161] failed to start cloud node lifecycle controller: no cloud provider provided
W1001 16:32:09.661039       1 controllermanager.go:489] Skipping "cloud-node-lifecycle"
I1001 16:32:09.808911       1 controllermanager.go:497] Started "persistentvolume-binder"
I1001 16:32:09.808948       1 pv_controller_base.go:270] Starting persistent volume controller
I1001 16:32:09.808987       1 controller_utils.go:1027] Waiting for caches to sync for persistent volume controller
I1001 16:32:09.959812       1 controllermanager.go:497] Started "pv-protection"
I1001 16:32:09.959896       1 pv_protection_controller.go:81] Starting PV protection controller
I1001 16:32:09.959910       1 controller_utils.go:1027] Waiting for caches to sync for PV protection controller
I1001 16:32:10.108518       1 controllermanager.go:497] Started "replicationcontroller"
I1001 16:32:10.108603       1 replica_set.go:182] Starting replicationcontroller controller
I1001 16:32:10.108621       1 controller_utils.go:1027] Waiting for caches to sync for ReplicationController controller
I1001 16:32:10.257354       1 controllermanager.go:497] Started "serviceaccount"
I1001 16:32:10.257444       1 serviceaccounts_controller.go:115] Starting service account controller
I1001 16:32:10.257469       1 controller_utils.go:1027] Waiting for caches to sync for service account controller
I1001 16:32:11.276916       1 garbagecollector.go:130] Starting garbage collector controller
I1001 16:32:11.277029       1 controller_utils.go:1027] Waiting for caches to sync for garbage collector controller
I1001 16:32:11.276976       1 controllermanager.go:497] Started "garbagecollector"
I1001 16:32:11.277186       1 graph_builder.go:308] GraphBuilder running
I1001 16:32:11.304204       1 controllermanager.go:497] Started "csrapproving"
I1001 16:32:11.304825       1 certificate_controller.go:113] Starting certificate controller
I1001 16:32:11.305239       1 controller_utils.go:1027] Waiting for caches to sync for certificate controller
I1001 16:32:11.324341       1 node_lifecycle_controller.go:292] Sending events to api server.
I1001 16:32:11.326317       1 node_lifecycle_controller.go:325] Controller is using taint based evictions.
I1001 16:32:11.327126       1 taint_manager.go:175] Sending events to api server.
I1001 16:32:11.333743       1 node_lifecycle_controller.go:390] Controller will reconcile labels.
I1001 16:32:11.334392       1 node_lifecycle_controller.go:403] Controller will taint node by condition.
I1001 16:32:11.334857       1 controllermanager.go:497] Started "nodelifecycle"
I1001 16:32:11.335670       1 node_lifecycle_controller.go:427] Starting node controller
I1001 16:32:11.336213       1 controller_utils.go:1027] Waiting for caches to sync for taint controller
I1001 16:32:11.358521       1 controllermanager.go:497] Started "deployment"
I1001 16:32:11.358866       1 deployment_controller.go:152] Starting deployment controller
I1001 16:32:11.359961       1 controller_utils.go:1027] Waiting for caches to sync for deployment controller
E1001 16:32:11.371891       1 prometheus.go:138] failed to register depth metric certificate: duplicate metrics collector registration attempted
E1001 16:32:11.371953       1 prometheus.go:150] failed to register adds metric certificate: duplicate metrics collector registration attempted
E1001 16:32:11.371985       1 prometheus.go:162] failed to register latency metric certificate: duplicate metrics collector registration attempted
E1001 16:32:11.372008       1 prometheus.go:174] failed to register work_duration metric certificate: duplicate metrics collector registration attempted
E1001 16:32:11.372024       1 prometheus.go:189] failed to register unfinished_work_seconds metric certificate: duplicate metrics collector registration attempted
E1001 16:32:11.372036       1 prometheus.go:202] failed to register longest_running_processor_microseconds metric certificate: duplicate metrics collector registration attempted
E1001 16:32:11.372104       1 prometheus.go:214] failed to register retries metric certificate: duplicate metrics collector registration attempted
I1001 16:32:11.372161       1 controllermanager.go:497] Started "csrsigning"
W1001 16:32:11.372172       1 controllermanager.go:489] Skipping "nodeipam"
I1001 16:32:11.372190       1 core.go:171] Will not configure cloud provider routes for allocate-node-cidrs: false, configure-cloud-routes: true.
W1001 16:32:11.372197       1 controllermanager.go:489] Skipping "route"
I1001 16:32:11.372368       1 certificate_controller.go:113] Starting certificate controller
I1001 16:32:11.372452       1 controller_utils.go:1027] Waiting for caches to sync for certificate controller
W1001 16:32:11.383632       1 probe.go:268] Flexvolume plugin directory at /usr/libexec/kubernetes/kubelet-plugins/volume/exec/ does not exist. Recreating.
I1001 16:32:11.384729       1 controllermanager.go:497] Started "attachdetach"
I1001 16:32:11.384961       1 attach_detach_controller.go:335] Starting attach detach controller
I1001 16:32:11.385002       1 controller_utils.go:1027] Waiting for caches to sync for attach detach controller
I1001 16:32:11.474972       1 controllermanager.go:497] Started "namespace"
I1001 16:32:11.475288       1 namespace_controller.go:186] Starting namespace controller
I1001 16:32:11.475528       1 controller_utils.go:1027] Waiting for caches to sync for namespace controller
I1001 16:32:11.608564       1 controllermanager.go:497] Started "daemonset"
I1001 16:32:11.608675       1 daemon_controller.go:267] Starting daemon sets controller
I1001 16:32:11.608701       1 controller_utils.go:1027] Waiting for caches to sync for daemon sets controller
I1001 16:32:11.756896       1 controllermanager.go:497] Started "cronjob"
E1001 16:32:11.757950       1 resource_quota_controller.go:437] failed to sync resource monitors: [couldn't start monitor for resource "extensions/v1beta1, Resource=networkpolicies": unable to monitor quota for resource "extensions/v1beta1, Resource=networkpolicies", couldn't start monitor for resource "compose.docker.com/v1alpha3, Resource=stacks": unable to monitor quota for resource "compose.docker.com/v1alpha3, Resource=stacks"]
I1001 16:32:11.773679       1 cronjob_controller.go:94] Starting CronJob Manager
W1001 16:32:11.794624       1 actual_state_of_world.go:503] Failed to update statusUpdateNeeded field in actual state of world: Failed to set statusUpdateNeeded to needed true, because nodeName="docker-desktop" does not exist
I1001 16:32:11.815600       1 controller_utils.go:1034] Caches are synced for TTL controller
I1001 16:32:11.815622       1 controller_utils.go:1034] Caches are synced for ClusterRoleAggregator controller
I1001 16:32:11.857147       1 controller_utils.go:1034] Caches are synced for bootstrap_signer controller
I1001 16:32:11.858229       1 controller_utils.go:1034] Caches are synced for service account controller
I1001 16:32:11.860172       1 controller_utils.go:1034] Caches are synced for PV protection controller
I1001 16:32:11.876055       1 controller_utils.go:1034] Caches are synced for namespace controller
I1001 16:32:12.223228       1 controller_utils.go:1034] Caches are synced for expand controller
I1001 16:32:12.330186       1 controller_utils.go:1034] Caches are synced for job controller
I1001 16:32:12.338316       1 controller_utils.go:1034] Caches are synced for taint controller
I1001 16:32:12.338812       1 taint_manager.go:198] Starting NoExecuteTaintManager
I1001 16:32:12.338828       1 node_lifecycle_controller.go:1159] Initializing eviction metric for zone: 
W1001 16:32:12.339172       1 node_lifecycle_controller.go:833] Missing timestamp for Node docker-desktop. Assuming now as a timestamp.
I1001 16:32:12.339378       1 node_lifecycle_controller.go:1059] Controller detected that zone  is now in state Normal.
I1001 16:32:12.342247       1 event.go:209] Event(v1.ObjectReference{Kind:"Node", Namespace:"", Name:"docker-desktop", UID:"36f9cf23-e459-11e9-ba40-025000000001", APIVersion:"", ResourceVersion:"", FieldPath:""}): type: 'Normal' reason: 'RegisteredNode' Node docker-desktop event: Registered Node docker-desktop in Controller
I1001 16:32:12.360184       1 controller_utils.go:1034] Caches are synced for deployment controller
I1001 16:32:12.360184       1 controller_utils.go:1034] Caches are synced for ReplicaSet controller
I1001 16:32:12.363739       1 controller_utils.go:1034] Caches are synced for PVC protection controller
I1001 16:32:12.363992       1 controller_utils.go:1034] Caches are synced for GC controller
I1001 16:32:12.380812       1 controller_utils.go:1034] Caches are synced for endpoint controller
I1001 16:32:12.387701       1 controller_utils.go:1034] Caches are synced for attach detach controller
I1001 16:32:12.398830       1 controller_utils.go:1034] Caches are synced for HPA controller
I1001 16:32:12.410315       1 controller_utils.go:1034] Caches are synced for ReplicationController controller
I1001 16:32:12.410430       1 controller_utils.go:1034] Caches are synced for daemon sets controller
I1001 16:32:12.410913       1 controller_utils.go:1034] Caches are synced for persistent volume controller
I1001 16:32:12.411153       1 controller_utils.go:1034] Caches are synced for stateful set controller
I1001 16:32:12.438833       1 controller_utils.go:1034] Caches are synced for disruption controller
I1001 16:32:12.438887       1 disruption.go:294] Sending events to api server.
I1001 16:32:12.472988       1 controller_utils.go:1034] Caches are synced for certificate controller
I1001 16:32:12.505953       1 controller_utils.go:1034] Caches are synced for certificate controller
I1001 16:32:12.554971       1 controller_utils.go:1034] Caches are synced for resource quota controller
I1001 16:32:12.577958       1 controller_utils.go:1034] Caches are synced for garbage collector controller
I1001 16:32:12.578557       1 garbagecollector.go:139] Garbage collector: all resource monitors have synced. Proceeding to collect garbage
I1001 16:32:12.763291       1 controller_utils.go:1027] Waiting for caches to sync for garbage collector controller
I1001 16:32:12.864113       1 controller_utils.go:1034] Caches are synced for garbage collector controller
W1001 16:44:30.842288       1 reflector.go:289] k8s.io/client-go/informers/factory.go:133: watch of *v1beta1.Event ended with: The resourceVersion for the provided watch is too old.
W1001 16:55:26.984402       1 reflector.go:289] k8s.io/client-go/informers/factory.go:133: watch of *v1beta1.Event ended with: The resourceVersion for the provided watch is too old.
W1001 17:03:30.082866       1 reflector.go:289] k8s.io/client-go/informers/factory.go:133: watch of *v1beta1.Event ended with: The resourceVersion for the provided watch is too old.
W1001 17:13:04.183278       1 reflector.go:289] k8s.io/client-go/informers/factory.go:133: watch of *v1beta1.Event ended with: The resourceVersion for the provided watch is too old.
W1001 17:21:42.262221       1 reflector.go:289] k8s.io/client-go/informers/factory.go:133: watch of *v1beta1.Event ended with: The resourceVersion for the provided watch is too old.
W1001 17:45:33.394780       1 reflector.go:289] k8s.io/client-go/informers/factory.go:133: watch of *v1beta1.Event ended with: The resourceVersion for the provided watch is too old.
W1001 17:53:28.438143       1 reflector.go:289] k8s.io/client-go/informers/factory.go:133: watch of *v1beta1.Event ended with: The resourceVersion for the provided watch is too old.
W1001 18:04:18.554169       1 reflector.go:289] k8s.io/client-go/informers/factory.go:133: watch of *v1beta1.Event ended with: The resourceVersion for the provided watch is too old.
W1001 18:17:37.576619       1 reflector.go:289] k8s.io/client-go/informers/factory.go:133: watch of *v1beta1.Event ended with: The resourceVersion for the provided watch is too old.
I1001 18:22:26.713216       1 event.go:209] Event(v1.ObjectReference{Kind:"Deployment", Namespace:"kubernetes-dashboard", Name:"kubernetes-dashboard", UID:"6bbf4731-e478-11e9-a03f-025000000001", APIVersion:"apps/v1", ResourceVersion:"16720", FieldPath:""}): type: 'Normal' reason: 'ScalingReplicaSet' Scaled up replica set kubernetes-dashboard-995fd6fb4 to 1
I1001 18:22:26.716193       1 event.go:209] Event(v1.ObjectReference{Kind:"Deployment", Namespace:"kubernetes-dashboard", Name:"dashboard-metrics-scraper", UID:"6bc82694-e478-11e9-a03f-025000000001", APIVersion:"apps/v1", ResourceVersion:"16724", FieldPath:""}): type: 'Normal' reason: 'ScalingReplicaSet' Scaled up replica set dashboard-metrics-scraper-677768c755 to 1
I1001 18:22:26.736225       1 event.go:209] Event(v1.ObjectReference{Kind:"ReplicaSet", Namespace:"kubernetes-dashboard", Name:"kubernetes-dashboard-995fd6fb4", UID:"6bc79292-e478-11e9-a03f-025000000001", APIVersion:"apps/v1", ResourceVersion:"16725", FieldPath:""}): type: 'Normal' reason: 'SuccessfulCreate' Created pod: kubernetes-dashboard-995fd6fb4-d67fj
I1001 18:22:26.736273       1 event.go:209] Event(v1.ObjectReference{Kind:"ReplicaSet", Namespace:"kubernetes-dashboard", Name:"dashboard-metrics-scraper-677768c755", UID:"6bc8d42f-e478-11e9-a03f-025000000001", APIVersion:"apps/v1", ResourceVersion:"16726", FieldPath:""}): type: 'Normal' reason: 'SuccessfulCreate' Created pod: dashboard-metrics-scraper-677768c755-2zvcx
==== END logs for container kube-controller-manager of pod kube-system/kube-controller-manager-docker-desktop ====
==== START logs for container kube-proxy of pod kube-system/kube-proxy-4b47w ====
W1001 16:31:51.368515       1 server_others.go:267] Flag proxy-mode="" unknown, assuming iptables proxy
I1001 16:31:51.402228       1 server_others.go:146] Using iptables Proxier.
W1001 16:31:51.404389       1 proxier.go:319] clusterCIDR not specified, unable to distinguish between internal and external traffic
I1001 16:31:51.410023       1 server.go:562] Version: v1.14.6
I1001 16:31:51.474026       1 conntrack.go:100] Set sysctl 'net/netfilter/nf_conntrack_max' to 131072
I1001 16:31:51.474093       1 conntrack.go:52] Setting nf_conntrack_max to 131072
I1001 16:31:51.475344       1 conntrack.go:83] Setting conntrack hashsize to 32768
I1001 16:31:51.528929       1 conntrack.go:100] Set sysctl 'net/netfilter/nf_conntrack_tcp_timeout_established' to 86400
I1001 16:31:51.529091       1 conntrack.go:100] Set sysctl 'net/netfilter/nf_conntrack_tcp_timeout_close_wait' to 3600
I1001 16:31:51.531964       1 config.go:202] Starting service config controller
I1001 16:31:51.544073       1 controller_utils.go:1027] Waiting for caches to sync for service config controller
I1001 16:31:51.532754       1 config.go:102] Starting endpoints config controller
I1001 16:31:51.544199       1 controller_utils.go:1027] Waiting for caches to sync for endpoints config controller
I1001 16:31:51.644539       1 controller_utils.go:1034] Caches are synced for endpoints config controller
I1001 16:31:51.644546       1 controller_utils.go:1034] Caches are synced for service config controller
==== END logs for container kube-proxy of pod kube-system/kube-proxy-4b47w ====
==== START logs for container kube-scheduler of pod kube-system/kube-scheduler-docker-desktop ====
I1001 16:31:39.104885       1 serving.go:319] Generated self-signed cert in-memory
W1001 16:31:39.825873       1 authentication.go:249] No authentication-kubeconfig provided in order to lookup client-ca-file in configmap/extension-apiserver-authentication in kube-system, so client certificate authentication won't work.
W1001 16:31:39.825928       1 authentication.go:252] No authentication-kubeconfig provided in order to lookup requestheader-client-ca-file in configmap/extension-apiserver-authentication in kube-system, so request-header client certificate authentication won't work.
W1001 16:31:39.825964       1 authorization.go:146] No authorization-kubeconfig provided, so SubjectAccessReview of authorization tokens won't work.
I1001 16:31:39.836953       1 server.go:142] Version: v1.14.6
I1001 16:31:39.837587       1 defaults.go:87] TaintNodesByCondition is enabled, PodToleratesNodeTaints predicate is mandatory
W1001 16:31:39.839901       1 authorization.go:47] Authorization is disabled
W1001 16:31:39.839933       1 authentication.go:55] Authentication is disabled
I1001 16:31:39.839953       1 deprecated_insecure_serving.go:49] Serving healthz insecurely on [::]:10251
I1001 16:31:39.840405       1 secure_serving.go:116] Serving securely on 127.0.0.1:10259
E1001 16:31:47.464252       1 reflector.go:126] k8s.io/client-go/informers/factory.go:133: Failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
E1001 16:31:47.464374       1 reflector.go:126] k8s.io/kubernetes/cmd/kube-scheduler/app/server.go:223: Failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
E1001 16:31:47.464584       1 reflector.go:126] k8s.io/client-go/informers/factory.go:133: Failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
E1001 16:31:47.465509       1 reflector.go:126] k8s.io/client-go/informers/factory.go:133: Failed to list *v1beta1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
I1001 16:31:49.364938       1 controller_utils.go:1027] Waiting for caches to sync for scheduler controller
I1001 16:31:49.465309       1 controller_utils.go:1034] Caches are synced for scheduler controller
I1001 16:31:49.465606       1 leaderelection.go:217] attempting to acquire leader lease  kube-system/kube-scheduler...
I1001 16:32:06.299510       1 leaderelection.go:227] successfully acquired lease kube-system/kube-scheduler
==== END logs for container kube-scheduler of pod kube-system/kube-scheduler-docker-desktop ====
==== START logs for container kubernetes-dashboard of pod kube-system/kubernetes-dashboard-5f7b999d65-s4tbc ====
2019/10/01 16:32:36 Using in-cluster config to connect to apiserver
2019/10/01 16:32:36 Starting overwatch
2019/10/01 16:32:36 Using service account token for csrf signing
2019/10/01 16:32:36 Successful initial request to the apiserver, version: v1.14.6
2019/10/01 16:32:36 Generating JWE encryption key
2019/10/01 16:32:36 New synchronizer has been registered: kubernetes-dashboard-key-holder-kube-system. Starting
2019/10/01 16:32:36 Starting secret synchronizer for kubernetes-dashboard-key-holder in namespace kube-system
2019/10/01 16:32:36 Initializing JWE encryption key from synchronized object
2019/10/01 16:32:36 Creating in-cluster Heapster client
2019/10/01 16:32:36 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:32:36 Auto-generating certificates
2019/10/01 16:32:36 Successfully created certificates
2019/10/01 16:32:36 Serving securely on HTTPS port: 8443
2019/10/01 16:33:06 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:33:36 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:34:06 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:34:36 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:35:06 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:35:36 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:36:06 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:36:36 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:37:06 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:37:36 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:38:06 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:38:36 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:39:06 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:39:36 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:40:06 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:40:36 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:41:06 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:41:36 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:42:06 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:42:36 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:43:06 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:43:36 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:44:06 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:44:36 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:45:06 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:45:36 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:46:06 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:46:36 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:47:06 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:47:36 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:48:06 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:48:36 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:49:06 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:49:36 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:50:06 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:50:36 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:51:06 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:51:36 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:52:06 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:52:36 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:53:06 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:53:36 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:54:06 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:54:36 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:55:06 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:55:36 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:56:06 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:56:36 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:57:06 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:57:36 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:58:06 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:58:36 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:59:06 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 16:59:36 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:00:06 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:00:36 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:01:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:01:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:02:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:02:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:03:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:03:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:04:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:04:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:05:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:05:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:06:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:06:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:07:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:07:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:08:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:08:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:09:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:09:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:10:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:10:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:11:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:11:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:12:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:12:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:13:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:13:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:14:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:14:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:15:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:15:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:16:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:16:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:17:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:17:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:18:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:18:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:19:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:19:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:20:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:20:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:21:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:21:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:22:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:22:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:23:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:23:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:24:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:24:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:25:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:25:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:26:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:26:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:27:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:27:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:28:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:28:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:29:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:29:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:30:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:30:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:31:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:31:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:32:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:32:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:33:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:33:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:34:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:34:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:35:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:35:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:36:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:36:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:37:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:37:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:38:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:38:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:39:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:39:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:40:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:40:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:41:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:41:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:42:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:42:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:43:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:43:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:44:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:44:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:45:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:45:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:46:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:46:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:47:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:47:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:48:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:48:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:49:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:49:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:50:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:50:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:51:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:51:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:52:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:52:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:53:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:53:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:54:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:54:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:55:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:55:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:56:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:56:37 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:57:07 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:57:38 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:58:08 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:58:38 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:59:08 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 17:59:38 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:00:08 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:00:38 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:01:08 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:01:38 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:02:08 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:02:38 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:03:08 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:03:38 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:04:08 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:04:38 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:05:08 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:05:38 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:06:08 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:06:38 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:07:08 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:07:38 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:08:08 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:08:38 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:09:08 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:09:38 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:10:08 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:10:38 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:11:08 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:11:38 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:12:08 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:12:38 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:13:08 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:13:38 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:14:08 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:14:38 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:15:08 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:15:38 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:16:08 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:16:38 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:17:08 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:17:38 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:18:08 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:18:38 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:19:08 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:19:38 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:20:08 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:20:38 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:21:08 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:21:38 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:22:08 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:22:38 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:23:08 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:23:38 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:24:08 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:24:38 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:25:08 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:25:38 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:26:08 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:26:38 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:27:08 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:27:38 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:28:08 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:28:38 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:29:08 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:29:38 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
2019/10/01 18:30:08 Metric client health check failed: the server could not find the requested resource (get services heapster). Retrying in 30 seconds.
==== END logs for container kubernetes-dashboard of pod kube-system/kubernetes-dashboard-5f7b999d65-s4tbc ====
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/default/events",
        "resourceVersion": "17328"
    },
    "items": []
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/default/replicationcontrollers",
        "resourceVersion": "17328"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/default/services",
        "resourceVersion": "17328"
    },
    "items": [
        {
            "metadata": {
                "name": "kubernetes",
                "namespace": "default",
                "selfLink": "/api/v1/namespaces/default/services/kubernetes",
                "uid": "38fd6028-e459-11e9-ba40-025000000001",
                "resourceVersion": "152",
                "creationTimestamp": "2019-10-01T14:39:07Z",
                "labels": {
                    "component": "apiserver",
                    "provider": "kubernetes"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "https",
                        "protocol": "TCP",
                        "port": 443,
                        "targetPort": 6443
                    }
                ],
                "clusterIP": "10.96.0.1",
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "selfLink": "/apis/apps/v1/namespaces/default/daemonsets",
        "resourceVersion": "17328"
    },
    "items": []
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "selfLink": "/apis/apps/v1/namespaces/default/deployments",
        "resourceVersion": "17328"
    },
    "items": []
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "selfLink": "/apis/apps/v1/namespaces/default/replicasets",
        "resourceVersion": "17328"
    },
    "items": []
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/default/pods",
        "resourceVersion": "17328"
    },
    "items": []
}
Cluster info dumped to standard output
